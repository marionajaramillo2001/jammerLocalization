Monte Carlo Run 2/10 with Seed: 43
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT33/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 500
Number of valid samples:  499
Train X shape:  torch.Size([399, 2])
Test X shape:  torch.Size([100, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [463. 453.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 47.64720962929072)
Round 1: test_loss = 0.000000
Round %d: (1, 41.76150858194963)
Round 2: test_loss = 0.000000
Round %d: (2, 30.68053399693127)
Round 3: test_loss = 0.000000
Round %d: (3, 23.29341819539039)
Round 4: test_loss = 0.000000
Round %d: (4, 19.872756495630103)
Round 5: test_loss = 0.000000
Round %d: (5, 17.71488587067337)
Round 6: test_loss = 0.000000
Round %d: (6, 16.727715729496698)
Round 7: test_loss = 0.000000
Round %d: (7, 15.76405808134562)
Round 8: test_loss = 0.000000
Round %d: (8, 15.323621694179897)
Round 9: test_loss = 0.000000
Round %d: (9, 14.918182839888955)
Round 10: test_loss = 0.000000
Round %d: (10, 14.756945592111109)
Round 11: test_loss = 0.000000
Round %d: (11, 14.597930195714449)
Round 12: test_loss = 0.000000
Round %d: (12, 13.540124350780538)
Round 13: test_loss = 0.000000
Round %d: (13, 13.744842652069222)
Round 14: test_loss = 0.000000
Round %d: (14, 12.890829163285593)
Round 15: test_loss = 0.000000
Round %d: (15, 12.567632565189975)
Round 16: test_loss = 0.000000
Round %d: (16, 12.012465546975081)
Round 17: test_loss = 0.000000
Round %d: (17, 11.720576723225305)
Round 18: test_loss = 0.000000
Round %d: (18, 12.123248485113347)
Round 19: test_loss = 0.000000
Round %d: (19, 12.239580332244444)
Round 20: test_loss = 0.000000
Round %d: (20, 11.317824368712511)
Round 21: test_loss = 0.000000
Round %d: (21, 11.194039021909628)
Round 22: test_loss = 0.000000
Round %d: (22, 9.355961001037006)
Round 23: test_loss = 0.000000
Round %d: (23, 8.734492901585051)
Round 24: test_loss = 0.000000
Round %d: (24, 8.143544105605107)
Round 25: test_loss = 0.000000
Round %d: (25, 7.92604249891229)
Round 26: test_loss = 0.000000
Round %d: (26, 7.587240444221039)
Round 27: test_loss = 0.000000
Round %d: (27, 7.407694577069674)
Round 28: test_loss = 0.000000
Round %d: (28, 7.1547778016520365)
Round 29: test_loss = 0.000000
Round %d: (29, 7.552569991331976)
Round 30: test_loss = 0.000000
Round %d: (30, 7.4545099633881176)
Round 31: test_loss = 0.000000
Round %d: (31, 7.158702619075269)
Round 32: test_loss = 0.000000
Round %d: (32, 6.402556584953275)
Round 33: test_loss = 0.000000
Round %d: (33, 5.856841533052474)
Round 34: test_loss = 0.000000
Round %d: (34, 5.592381949885334)
Round 35: test_loss = 0.000000
Round %d: (35, 6.1936074865608415)
Round 36: test_loss = 0.000000
Round %d: (36, 6.2430435370165585)
Round 37: test_loss = 0.000000
Round %d: (37, 6.18419575125763)
Round 38: test_loss = 0.000000
Round %d: (38, 5.96747028454515)
Round 39: test_loss = 0.000000
Round %d: (39, 6.291096268905652)
Closest point in the train dataset to the real location: [494.59674 515.12537]
Minimum distance to the real location: 16.212924500850008
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 45.90196892938841)
Round 1: test_loss = 0.000000
Round %d: (1, 43.61021585498277)
Round 2: test_loss = 0.000000
Round %d: (2, 35.354090042813645)
Round 3: test_loss = 0.000000
Round %d: (3, 27.074335059072727)
Round 4: test_loss = 0.000000
Round %d: (4, 20.998310609154164)
Round 5: test_loss = 0.000000
Round %d: (5, 16.49735729804507)
Round 6: test_loss = 0.000000
Round %d: (6, 14.358150596934202)
Round 7: test_loss = 0.000000
Round %d: (7, 12.298238232122294)
Round 8: test_loss = 0.000000
Round %d: (8, 11.183721270801321)
Round 9: test_loss = 0.000000
Round %d: (9, 10.34518152546333)
Round 10: test_loss = 0.000000
Round %d: (10, 9.022178124276369)
Round 11: test_loss = 0.000000
Round %d: (11, 9.177548768517086)
Round 12: test_loss = 0.000000
Round %d: (12, 8.681643860345043)
Round 13: test_loss = 0.000000
Round %d: (13, 8.453646350282602)
Round 14: test_loss = 0.000000
Round %d: (14, 7.051794958019786)
Round 15: test_loss = 0.000000
Round %d: (15, 7.425604903774301)
Round 16: test_loss = 0.000000
Round %d: (16, 6.54542991732215)
Round 17: test_loss = 0.000000
Round %d: (17, 5.920260941668959)
Round 18: test_loss = 0.000000
Round %d: (18, 5.578790660916419)
Round 19: test_loss = 0.000000
Round %d: (19, 5.103386513929882)
Round 20: test_loss = 0.000000
Round %d: (20, 5.023369935225925)
Round 21: test_loss = 0.000000
Round %d: (21, 5.293648910123658)
Round 22: test_loss = 0.000000
Round %d: (22, 5.170583110359244)
Round 23: test_loss = 0.000000
Round %d: (23, 4.572906480682336)
Round 24: test_loss = 0.000000
Round %d: (24, 4.602355092858875)
Round 25: test_loss = 0.000000
Round %d: (25, 4.046476163217948)
Round 26: test_loss = 0.000000
Round %d: (26, 4.378408871706058)
Round 27: test_loss = 0.000000
Round %d: (27, 4.384000316604937)
Round 28: test_loss = 0.000000
Round %d: (28, 4.030365209759369)
Round 29: test_loss = 0.000000
Round %d: (29, 3.6808621595631537)
Round 30: test_loss = 0.000000
Round %d: (30, 4.364733446347015)
Round 31: test_loss = 0.000000
Round %d: (31, 4.852087019813107)
Round 32: test_loss = 0.000000
Round %d: (32, 5.168032501454443)
Round 33: test_loss = 0.000000
Round %d: (33, 4.829117204056667)
Round 34: test_loss = 0.000000
Round %d: (34, 5.717047198693262)
Round 35: test_loss = 0.000000
Round %d: (35, 5.695097777659058)
Round 36: test_loss = 0.000000
Round %d: (36, 5.354366071553509)
Round 37: test_loss = 0.000000
Round %d: (37, 4.843919678019846)
Round 38: test_loss = 0.000000
Round %d: (38, 4.354809841477724)
Round 39: test_loss = 0.000000
Round %d: (39, 4.52422851797546)
Closest point in the train dataset to the real location: [494.59674 515.12537]
Minimum distance to the real location: 16.212924500850008
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 40.9765
  Jammer Localization Error (PL): 6.2911
  Jammer Localization Error (APBM): 4.5242
