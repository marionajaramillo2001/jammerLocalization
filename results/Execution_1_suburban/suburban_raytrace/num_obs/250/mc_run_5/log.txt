Monte Carlo Run 6/10 with Seed: 47
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT33/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 250
Number of valid samples:  250
Train X shape:  torch.Size([200, 2])
Test X shape:  torch.Size([50, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [549. 447.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 60.588514804854725)
Round 1: test_loss = 0.000000
Round %d: (1, 70.79029537055987)
Round 2: test_loss = 0.000000
Round %d: (2, 81.08229266449814)
Round 3: test_loss = 0.000000
Round %d: (3, 78.89461704824616)
Round 4: test_loss = 0.000000
Round %d: (4, 72.61737537434962)
Round 5: test_loss = 0.000000
Round %d: (5, 66.80104103420354)
Round 6: test_loss = 0.000000
Round %d: (6, 60.82471584939937)
Round 7: test_loss = 0.000000
Round %d: (7, 53.20080956432722)
Round 8: test_loss = 0.000000
Round %d: (8, 46.660147247338074)
Round 9: test_loss = 0.000000
Round %d: (9, 40.82337614652559)
Round 10: test_loss = 0.000000
Round %d: (10, 35.709534641712665)
Round 11: test_loss = 0.000000
Round %d: (11, 32.182490606645004)
Round 12: test_loss = 0.000000
Round %d: (12, 28.051818456782318)
Round 13: test_loss = 0.000000
Round %d: (13, 24.957416816291698)
Round 14: test_loss = 0.000000
Round %d: (14, 22.097453127296202)
Round 15: test_loss = 0.000000
Round %d: (15, 20.60581172399907)
Round 16: test_loss = 0.000000
Round %d: (16, 19.424340711091876)
Round 17: test_loss = 0.000000
Round %d: (17, 19.008193758632377)
Round 18: test_loss = 0.000000
Round %d: (18, 18.28958612822557)
Round 19: test_loss = 0.000000
Round %d: (19, 18.829280067488508)
Round 20: test_loss = 0.000000
Round %d: (20, 18.889485963343184)
Round 21: test_loss = 0.000000
Round %d: (21, 19.202352712768842)
Round 22: test_loss = 0.000000
Round %d: (22, 19.85749228178491)
Round 23: test_loss = 0.000000
Round %d: (23, 19.297170143603726)
Round 24: test_loss = 0.000000
Round %d: (24, 20.2981088779299)
Round 25: test_loss = 0.000000
Round %d: (25, 21.083047794817855)
Round 26: test_loss = 0.000000
Round %d: (26, 21.350161150885636)
Round 27: test_loss = 0.000000
Round %d: (27, 21.981489491941936)
Round 28: test_loss = 0.000000
Round %d: (28, 22.09097270912533)
Round 29: test_loss = 0.000000
Round %d: (29, 21.677847953365013)
Round 30: test_loss = 0.000000
Round %d: (30, 21.69755653918489)
Round 31: test_loss = 0.000000
Round %d: (31, 22.136168763105186)
Round 32: test_loss = 0.000000
Round %d: (32, 22.4112125787889)
Round 33: test_loss = 0.000000
Round %d: (33, 22.271793042308953)
Round 34: test_loss = 0.000000
Round %d: (34, 21.518572522340822)
Round 35: test_loss = 0.000000
Round %d: (35, 21.860919720905382)
Round 36: test_loss = 0.000000
Round %d: (36, 21.9378818718903)
Round 37: test_loss = 0.000000
Round %d: (37, 21.28092819580859)
Round 38: test_loss = 0.000000
Round %d: (38, 21.02454723417749)
Round 39: test_loss = 0.000000
Round %d: (39, 20.885617702527988)
Closest point in the train dataset to the real location: [505.42056 515.6536 ]
Minimum distance to the real location: 18.037442826307203
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 61.09953927507915)
Round 1: test_loss = 0.000000
Round %d: (1, 70.68583563831561)
Round 2: test_loss = 0.000000
Round %d: (2, 77.93783601390714)
Round 3: test_loss = 0.000000
Round %d: (3, 80.14352110603674)
Round 4: test_loss = 0.000000
Round %d: (4, 80.9188265398093)
Round 5: test_loss = 0.000000
Round %d: (5, 82.00000010867592)
Round 6: test_loss = 0.000000
Round %d: (6, 82.35796330900541)
Round 7: test_loss = 0.000000
Round %d: (7, 82.15807972527067)
Round 8: test_loss = 0.000000
Round %d: (8, 81.66916716209361)
Round 9: test_loss = 0.000000
Round %d: (9, 81.23968625712727)
Round 10: test_loss = 0.000000
Round %d: (10, 81.26469636544421)
Round 11: test_loss = 0.000000
Round %d: (11, 80.9483506883779)
Round 12: test_loss = 0.000000
Round %d: (12, 81.0650642100419)
Round 13: test_loss = 0.000000
Round %d: (13, 80.05291992921191)
Round 14: test_loss = 0.000000
Round %d: (14, 79.10412273231542)
Round 15: test_loss = 0.000000
Round %d: (15, 79.58399140644221)
Round 16: test_loss = 0.000000
Round %d: (16, 78.89684128718548)
Round 17: test_loss = 0.000000
Round %d: (17, 78.18595212488083)
Round 18: test_loss = 0.000000
Round %d: (18, 77.86546529979499)
Round 19: test_loss = 0.000000
Round %d: (19, 77.08213311659215)
Round 20: test_loss = 0.000000
Round %d: (20, 76.90997673696666)
Round 21: test_loss = 0.000000
Round %d: (21, 76.1716898313008)
Round 22: test_loss = 0.000000
Round %d: (22, 75.62893113367278)
Round 23: test_loss = 0.000000
Round %d: (23, 75.10567638662855)
Round 24: test_loss = 0.000000
Round %d: (24, 74.78187776301102)
Round 25: test_loss = 0.000000
Round %d: (25, 73.82790547114256)
Round 26: test_loss = 0.000000
Round %d: (26, 73.06343896177934)
Round 27: test_loss = 0.000000
Round %d: (27, 71.41540187302758)
Round 28: test_loss = 0.000000
Round %d: (28, 70.18110943863013)
Round 29: test_loss = 0.000000
Round %d: (29, 69.90491319009854)
Round 30: test_loss = 0.000000
Round %d: (30, 68.48691795483714)
Round 31: test_loss = 0.000000
Round %d: (31, 67.41299269007321)
Round 32: test_loss = 0.000000
Round %d: (32, 66.42555850663717)
Round 33: test_loss = 0.000000
Round %d: (33, 65.19345620321418)
Round 34: test_loss = 0.000000
Round %d: (34, 64.22242614275015)
Round 35: test_loss = 0.000000
Round %d: (35, 63.26781726387032)
Round 36: test_loss = 0.000000
Round %d: (36, 62.87620988950882)
Round 37: test_loss = 0.000000
Round %d: (37, 61.86940060810459)
Round 38: test_loss = 0.000000
Round %d: (38, 61.23723669737215)
Round 39: test_loss = 0.000000
Round %d: (39, 60.75480751436733)
Closest point in the train dataset to the real location: [505.42056 515.6536 ]
Minimum distance to the real location: 18.037442826307203
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 51.6758
  Jammer Localization Error (PL): 20.8856
  Jammer Localization Error (APBM): 60.7548
