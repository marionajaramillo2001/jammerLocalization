Monte Carlo Run 1/1 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT33/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 1
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 2
num_rounds_pl: 2
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  998
Train X shape:  torch.Size([798, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [551. 493.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 9.493048449206533)
Round 1: test_loss = 0.000000
Round %d: (1, 8.922047845365933)
Closest point in the train dataset to the real location: [500.892  512.6189]
Minimum distance to the real location: 13.69319068600445
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 7.771583329521223)
Round 1: test_loss = 0.000000
Round %d: (1, 10.771401718213948)
Round 2: test_loss = 0.000000
Round %d: (2, 10.48425619013343)
Round 3: test_loss = 0.000000
Round %d: (3, 9.180634886090276)
Round 4: test_loss = 0.000000
Round %d: (4, 9.540323210546434)
Round 5: test_loss = 0.000000
Round %d: (5, 9.984115706834656)
Round 6: test_loss = 0.000000
Round %d: (6, 9.271464082812146)
Round 7: test_loss = 0.000000
Round %d: (7, 9.179524370028304)
Round 8: test_loss = 0.000000
Round %d: (8, 7.412723495213919)
Round 9: test_loss = 0.000000
Round %d: (9, 8.053155329593704)
Round 10: test_loss = 0.000000
Round %d: (10, 8.853171760778865)
Round 11: test_loss = 0.000000
Round %d: (11, 8.200795761148258)
Round 12: test_loss = 0.000000
Round %d: (12, 7.5468048126663545)
Round 13: test_loss = 0.000000
Round %d: (13, 8.17164947960722)
Round 14: test_loss = 0.000000
Round %d: (14, 6.579783065919467)
Round 15: test_loss = 0.000000
Round %d: (15, 7.811637991138469)
Round 16: test_loss = 0.000000
Round %d: (16, 9.314186008402533)
Round 17: test_loss = 0.000000
Round %d: (17, 7.043502239333069)
Round 18: test_loss = 0.000000
Round %d: (18, 4.472409025121188)
Round 19: test_loss = 0.000000
Round %d: (19, 4.314401854250663)
Round 20: test_loss = 0.000000
Round %d: (20, 8.207605189645744)
Round 21: test_loss = 0.000000
Round %d: (21, 9.78786434053083)
Round 22: test_loss = 0.000000
Round %d: (22, 7.7940132491830685)
Round 23: test_loss = 0.000000
Round %d: (23, 6.566803505550709)
Round 24: test_loss = 0.000000
Round %d: (24, 4.600051306772438)
Round 25: test_loss = 0.000000
Round %d: (25, 8.6077040289239)
Round 26: test_loss = 0.000000
Round %d: (26, 5.0794936006159705)
Round 27: test_loss = 0.000000
Round %d: (27, 6.779502798916519)
Round 28: test_loss = 0.000000
Round %d: (28, 6.618214261654716)
Round 29: test_loss = 0.000000
Round %d: (29, 2.7087823093405587)
Round 30: test_loss = 0.000000
Round %d: (30, 5.498545877316686)
Round 31: test_loss = 0.000000
Round %d: (31, 4.532431224221409)
Round 32: test_loss = 0.000000
Round %d: (32, 7.6072040103478145)
Round 33: test_loss = 0.000000
Round %d: (33, 4.800835545958045)
Round 34: test_loss = 0.000000
Round %d: (34, 3.717459790812854)
Round 35: test_loss = 0.000000
Round %d: (35, 5.0659179525747104)
Round 36: test_loss = 0.000000
Round %d: (36, 3.8658872686201184)
Round 37: test_loss = 0.000000
Round %d: (37, 7.758616338525298)
Round 38: test_loss = 0.000000
Round %d: (38, 5.2299584905662035)
Round 39: test_loss = 0.000000
Round %d: (39, 3.401862679580436)
Closest point in the train dataset to the real location: [500.892  512.6189]
Minimum distance to the real location: 13.69319068600445
