Monte Carlo Run 2/10 with Seed: 43
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 3.162277660168379
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  1000
Train X shape:  torch.Size([800, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [562. 761.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 13.760726214391758)
Round 1: test_loss = 0.000000
Round %d: (1, 1.178687545103528)
Round 2: test_loss = 0.000000
Round %d: (2, 1.380687307909182)
Round 3: test_loss = 0.000000
Round %d: (3, 1.2303336723714904)
Round 4: test_loss = 0.000000
Round %d: (4, 2.1234556102985653)
Round 5: test_loss = 0.000000
Round %d: (5, 1.6912136508983828)
Round 6: test_loss = 0.000000
Round %d: (6, 1.710324823616226)
Round 7: test_loss = 0.000000
Round %d: (7, 1.0749792696558162)
Round 8: test_loss = 0.000000
Round %d: (8, 1.4033766492556075)
Round 9: test_loss = 0.000000
Round %d: (9, 1.5050528794680496)
Round 10: test_loss = 0.000000
Round %d: (10, 1.624737722403275)
Round 11: test_loss = 0.000000
Round %d: (11, 0.9610134042587384)
Round 12: test_loss = 0.000000
Round %d: (12, 1.271198699297433)
Round 13: test_loss = 0.000000
Round %d: (13, 0.5799597149954961)
Round 14: test_loss = 0.000000
Round %d: (14, 1.3596046793862875)
Round 15: test_loss = 0.000000
Round %d: (15, 1.5191118455638404)
Round 16: test_loss = 0.000000
Round %d: (16, 1.3658275577512953)
Round 17: test_loss = 0.000000
Round %d: (17, 1.0099699872828123)
Round 18: test_loss = 0.000000
Round %d: (18, 1.1200113900956843)
Round 19: test_loss = 0.000000
Round %d: (19, 1.3897507227741914)
Round 20: test_loss = 0.000000
Round %d: (20, 0.8738671088852893)
Round 21: test_loss = 0.000000
Round %d: (21, 0.9805668682434933)
Round 22: test_loss = 0.000000
Round %d: (22, 1.3743333125952995)
Round 23: test_loss = 0.000000
Round %d: (23, 1.283109978456088)
Round 24: test_loss = 0.000000
Round %d: (24, 1.0479771085864487)
Round 25: test_loss = 0.000000
Round %d: (25, 1.1177108081332054)
Round 26: test_loss = 0.000000
Round %d: (26, 1.3326879146105526)
Round 27: test_loss = 0.000000
Round %d: (27, 1.6866048909369389)
Round 28: test_loss = 0.000000
Round %d: (28, 1.3646304100791211)
Round 29: test_loss = 0.000000
Round %d: (29, 1.1704586218907234)
Round 30: test_loss = 0.000000
Round %d: (30, 1.1005471177072859)
Round 31: test_loss = 0.000000
Round %d: (31, 1.159857675257559)
Round 32: test_loss = 0.000000
Round %d: (32, 1.4650742255392344)
Round 33: test_loss = 0.000000
Round %d: (33, 2.0725646683938477)
Round 34: test_loss = 0.000000
Round %d: (34, 1.8191876131757079)
Round 35: test_loss = 0.000000
Round %d: (35, 1.3580246816209705)
Round 36: test_loss = 0.000000
Round %d: (36, 1.682378188523936)
Round 37: test_loss = 0.000000
Round %d: (37, 1.3154102837650528)
Round 38: test_loss = 0.000000
Round %d: (38, 1.660780271232796)
Round 39: test_loss = 0.000000
Round %d: (39, 1.2682400147783994)
Closest point in the train dataset to the real location: [530.309  725.9249]
Minimum distance to the real location: 27.125996754609044
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 30.96352315082276)
Round 1: test_loss = 0.000000
Round %d: (1, 13.484247647186175)
Round 2: test_loss = 0.000000
Round %d: (2, 2.5028179663750487)
Round 3: test_loss = 0.000000
Round %d: (3, 2.638864245347339)
Round 4: test_loss = 0.000000
Round %d: (4, 3.008215791883854)
Round 5: test_loss = 0.000000
Round %d: (5, 3.3969862905356383)
Round 6: test_loss = 0.000000
Round %d: (6, 3.6473211355006185)
Round 7: test_loss = 0.000000
Round %d: (7, 3.8313054028752465)
Round 8: test_loss = 0.000000
Round %d: (8, 3.8541871050479775)
Round 9: test_loss = 0.000000
Round %d: (9, 4.487734213375027)
Round 10: test_loss = 0.000000
Round %d: (10, 3.647086895635705)
Round 11: test_loss = 0.000000
Round %d: (11, 3.4161310730649213)
Round 12: test_loss = 0.000000
Round %d: (12, 3.244955651820448)
Round 13: test_loss = 0.000000
Round %d: (13, 3.495116123753271)
Round 14: test_loss = 0.000000
Round %d: (14, 3.6085506103484595)
Round 15: test_loss = 0.000000
Round %d: (15, 2.8652765342485047)
Round 16: test_loss = 0.000000
Round %d: (16, 3.561039778679322)
Round 17: test_loss = 0.000000
Round %d: (17, 3.4578132970325157)
Round 18: test_loss = 0.000000
Round %d: (18, 3.9339825937739326)
Round 19: test_loss = 0.000000
Round %d: (19, 3.6893391172360714)
Round 20: test_loss = 0.000000
Round %d: (20, 3.8225132431426316)
Round 21: test_loss = 0.000000
Round %d: (21, 3.146173086024705)
Round 22: test_loss = 0.000000
Round %d: (22, 3.475262813510092)
Round 23: test_loss = 0.000000
Round %d: (23, 3.4156843180635272)
Round 24: test_loss = 0.000000
Round %d: (24, 3.473711585831277)
Round 25: test_loss = 0.000000
Round %d: (25, 3.6565784170385522)
Round 26: test_loss = 0.000000
Round %d: (26, 3.2121307118282667)
Round 27: test_loss = 0.000000
Round %d: (27, 3.1014962192985966)
Round 28: test_loss = 0.000000
Round %d: (28, 2.9635270924266766)
Round 29: test_loss = 0.000000
Round %d: (29, 3.471853035791122)
Round 30: test_loss = 0.000000
Round %d: (30, 3.6378940877075023)
Round 31: test_loss = 0.000000
Round %d: (31, 3.3011969347539263)
Round 32: test_loss = 0.000000
Round %d: (32, 3.1544497799794065)
Round 33: test_loss = 0.000000
Round %d: (33, 3.681442043017448)
Round 34: test_loss = 0.000000
Round %d: (34, 3.218689500165776)
Round 35: test_loss = 0.000000
Round %d: (35, 3.3367702533777344)
Round 36: test_loss = 0.000000
Round %d: (36, 3.8758054483114592)
Round 37: test_loss = 0.000000
Round %d: (37, 3.5335228054725896)
Round 38: test_loss = 0.000000
Round %d: (38, 2.962285552537247)
Round 39: test_loss = 0.000000
Round %d: (39, 3.374076018795664)
Closest point in the train dataset to the real location: [530.309  725.9249]
Minimum distance to the real location: 27.125996754609044
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 38.2024
  Jammer Localization Error (PL): 1.2682
  Jammer Localization Error (APBM): 3.3741
