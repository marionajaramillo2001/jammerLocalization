Monte Carlo Run 3/10 with Seed: 44
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 3.162277660168379
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  1000
Train X shape:  torch.Size([800, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [547. 715.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 4.407166823620291)
Round 1: test_loss = 0.000000
Round %d: (1, 5.2108010219729985)
Round 2: test_loss = 0.000000
Round %d: (2, 5.800569569769679)
Round 3: test_loss = 0.000000
Round %d: (3, 5.872111798331949)
Round 4: test_loss = 0.000000
Round %d: (4, 4.976605460524035)
Round 5: test_loss = 0.000000
Round %d: (5, 5.395418454280661)
Round 6: test_loss = 0.000000
Round %d: (6, 5.319041790185675)
Round 7: test_loss = 0.000000
Round %d: (7, 6.122558920999841)
Round 8: test_loss = 0.000000
Round %d: (8, 5.737859668189855)
Round 9: test_loss = 0.000000
Round %d: (9, 5.117020655637159)
Round 10: test_loss = 0.000000
Round %d: (10, 5.3669249098169916)
Round 11: test_loss = 0.000000
Round %d: (11, 5.574933157306597)
Round 12: test_loss = 0.000000
Round %d: (12, 5.168016078450026)
Round 13: test_loss = 0.000000
Round %d: (13, 5.609079164529705)
Round 14: test_loss = 0.000000
Round %d: (14, 5.225177091408712)
Round 15: test_loss = 0.000000
Round %d: (15, 5.361136328315329)
Round 16: test_loss = 0.000000
Round %d: (16, 5.560954488889132)
Round 17: test_loss = 0.000000
Round %d: (17, 5.588533575059579)
Round 18: test_loss = 0.000000
Round %d: (18, 5.211545396231371)
Round 19: test_loss = 0.000000
Round %d: (19, 5.0339385508627315)
Round 20: test_loss = 0.000000
Round %d: (20, 4.994306573977897)
Round 21: test_loss = 0.000000
Round %d: (21, 5.274365802807938)
Round 22: test_loss = 0.000000
Round %d: (22, 5.537774475368594)
Round 23: test_loss = 0.000000
Round %d: (23, 5.709301642251917)
Round 24: test_loss = 0.000000
Round %d: (24, 5.170139023681961)
Round 25: test_loss = 0.000000
Round %d: (25, 5.6759958289458305)
Round 26: test_loss = 0.000000
Round %d: (26, 4.686382787392167)
Round 27: test_loss = 0.000000
Round %d: (27, 5.2522569656711475)
Round 28: test_loss = 0.000000
Round %d: (28, 5.34284126537548)
Round 29: test_loss = 0.000000
Round %d: (29, 5.069764462030874)
Round 30: test_loss = 0.000000
Round %d: (30, 5.5514618669655444)
Round 31: test_loss = 0.000000
Round %d: (31, 5.571508272323104)
Round 32: test_loss = 0.000000
Round %d: (32, 4.903606028881042)
Round 33: test_loss = 0.000000
Round %d: (33, 5.44053893782434)
Round 34: test_loss = 0.000000
Round %d: (34, 5.322543286040573)
Round 35: test_loss = 0.000000
Round %d: (35, 5.504034007367659)
Round 36: test_loss = 0.000000
Round %d: (36, 5.385915112838281)
Round 37: test_loss = 0.000000
Round %d: (37, 4.897475027568456)
Round 38: test_loss = 0.000000
Round %d: (38, 5.615973053526729)
Round 39: test_loss = 0.000000
Round %d: (39, 5.244833315909197)
Closest point in the train dataset to the real location: [539.86115 722.8166 ]
Minimum distance to the real location: 18.297141400038754
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 6.580848623850951)
Round 1: test_loss = 0.000000
Round %d: (1, 1.7099749912726216)
Round 2: test_loss = 0.000000
Round %d: (2, 1.5407820801379215)
Round 3: test_loss = 0.000000
Round %d: (3, 2.4568145610710768)
Round 4: test_loss = 0.000000
Round %d: (4, 3.3916329348806813)
Round 5: test_loss = 0.000000
Round %d: (5, 2.988548916659071)
Round 6: test_loss = 0.000000
Round %d: (6, 2.8579191306031224)
Round 7: test_loss = 0.000000
Round %d: (7, 2.1042482305641355)
Round 8: test_loss = 0.000000
Round %d: (8, 3.30905566517016)
Round 9: test_loss = 0.000000
Round %d: (9, 3.105699766087499)
Round 10: test_loss = 0.000000
Round %d: (10, 3.110659028086974)
Round 11: test_loss = 0.000000
Round %d: (11, 3.0694491320629576)
Round 12: test_loss = 0.000000
Round %d: (12, 3.3347548581040436)
Round 13: test_loss = 0.000000
Round %d: (13, 2.7370827693328255)
Round 14: test_loss = 0.000000
Round %d: (14, 3.0812155763931974)
Round 15: test_loss = 0.000000
Round %d: (15, 2.9418958639486443)
Round 16: test_loss = 0.000000
Round %d: (16, 3.8746542865669134)
Round 17: test_loss = 0.000000
Round %d: (17, 3.6181596713515263)
Round 18: test_loss = 0.000000
Round %d: (18, 3.0184674079074116)
Round 19: test_loss = 0.000000
Round %d: (19, 3.5443169671820445)
Round 20: test_loss = 0.000000
Round %d: (20, 3.515125927990205)
Round 21: test_loss = 0.000000
Round %d: (21, 3.26554512929148)
Round 22: test_loss = 0.000000
Round %d: (22, 3.600240649045378)
Round 23: test_loss = 0.000000
Round %d: (23, 3.550414997480948)
Round 24: test_loss = 0.000000
Round %d: (24, 2.9809374792334067)
Round 25: test_loss = 0.000000
Round %d: (25, 3.4734743186430985)
Round 26: test_loss = 0.000000
Round %d: (26, 3.508362636662784)
Round 27: test_loss = 0.000000
Round %d: (27, 3.3375431980614603)
Round 28: test_loss = 0.000000
Round %d: (28, 3.1063068261607207)
Round 29: test_loss = 0.000000
Round %d: (29, 2.9469252838561912)
Round 30: test_loss = 0.000000
Round %d: (30, 2.6423611542715775)
Round 31: test_loss = 0.000000
Round %d: (31, 3.0346719945839915)
Round 32: test_loss = 0.000000
Round %d: (32, 2.591416900244769)
Round 33: test_loss = 0.000000
Round %d: (33, 2.844016902861292)
Round 34: test_loss = 0.000000
Round %d: (34, 2.4465092637255483)
Round 35: test_loss = 0.000000
Round %d: (35, 2.7167602699857984)
Round 36: test_loss = 0.000000
Round %d: (36, 2.6507224130485882)
Round 37: test_loss = 0.000000
Round %d: (37, 2.473730058801293)
Round 38: test_loss = 0.000000
Round %d: (38, 2.783406557633671)
Round 39: test_loss = 0.000000
Round %d: (39, 2.7596629718383987)
Closest point in the train dataset to the real location: [539.86115 722.8166 ]
Minimum distance to the real location: 18.297141400038754
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 5.5397
  Jammer Localization Error (PL): 5.2448
  Jammer Localization Error (APBM): 2.7597
