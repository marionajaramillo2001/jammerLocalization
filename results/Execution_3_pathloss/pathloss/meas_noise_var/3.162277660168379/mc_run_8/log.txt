Monte Carlo Run 9/10 with Seed: 50
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 3.162277660168379
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  1000
Train X shape:  torch.Size([800, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [549. 687.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 5.657086662414695)
Round 1: test_loss = 0.000000
Round %d: (1, 4.614137403840738)
Round 2: test_loss = 0.000000
Round %d: (2, 4.364078666019295)
Round 3: test_loss = 0.000000
Round %d: (3, 4.868135007283135)
Round 4: test_loss = 0.000000
Round %d: (4, 4.428162504437885)
Round 5: test_loss = 0.000000
Round %d: (5, 3.8063073605230495)
Round 6: test_loss = 0.000000
Round %d: (6, 4.698416453992524)
Round 7: test_loss = 0.000000
Round %d: (7, 4.441017353980179)
Round 8: test_loss = 0.000000
Round %d: (8, 4.939765632980569)
Round 9: test_loss = 0.000000
Round %d: (9, 4.535872228409356)
Round 10: test_loss = 0.000000
Round %d: (10, 4.5924770237447134)
Round 11: test_loss = 0.000000
Round %d: (11, 4.7832017843012995)
Round 12: test_loss = 0.000000
Round %d: (12, 4.971702788307187)
Round 13: test_loss = 0.000000
Round %d: (13, 4.791565900150317)
Round 14: test_loss = 0.000000
Round %d: (14, 4.637792782141371)
Round 15: test_loss = 0.000000
Round %d: (15, 4.518869133987446)
Round 16: test_loss = 0.000000
Round %d: (16, 4.574012294616551)
Round 17: test_loss = 0.000000
Round %d: (17, 4.630000303726249)
Round 18: test_loss = 0.000000
Round %d: (18, 4.8870396703335235)
Round 19: test_loss = 0.000000
Round %d: (19, 4.792085193539954)
Round 20: test_loss = 0.000000
Round %d: (20, 4.679607793986557)
Round 21: test_loss = 0.000000
Round %d: (21, 4.532976738323793)
Round 22: test_loss = 0.000000
Round %d: (22, 5.0861404482062875)
Round 23: test_loss = 0.000000
Round %d: (23, 4.010349141377879)
Round 24: test_loss = 0.000000
Round %d: (24, 4.970026902166062)
Round 25: test_loss = 0.000000
Round %d: (25, 4.933136093636662)
Round 26: test_loss = 0.000000
Round %d: (26, 5.009339045215762)
Round 27: test_loss = 0.000000
Round %d: (27, 4.759763091802068)
Round 28: test_loss = 0.000000
Round %d: (28, 4.740957256188154)
Round 29: test_loss = 0.000000
Round %d: (29, 4.594658018041507)
Round 30: test_loss = 0.000000
Round %d: (30, 4.641098799791837)
Round 31: test_loss = 0.000000
Round %d: (31, 5.177942655304172)
Round 32: test_loss = 0.000000
Round %d: (32, 4.324586825543179)
Round 33: test_loss = 0.000000
Round %d: (33, 4.998720941451063)
Round 34: test_loss = 0.000000
Round %d: (34, 4.695396297026121)
Round 35: test_loss = 0.000000
Round %d: (35, 4.887441954772478)
Round 36: test_loss = 0.000000
Round %d: (36, 4.844086017054963)
Round 37: test_loss = 0.000000
Round %d: (37, 4.969164287700465)
Round 38: test_loss = 0.000000
Round %d: (38, 5.1920808122518025)
Round 39: test_loss = 0.000000
Round %d: (39, 5.049098946116909)
Closest point in the train dataset to the real location: [547.8176  719.82776]
Minimum distance to the real location: 12.054167401254155
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 3.3298930253896377)
Round 1: test_loss = 0.000000
Round %d: (1, 3.0064821110094426)
Round 2: test_loss = 0.000000
Round %d: (2, 4.033643451447981)
Round 3: test_loss = 0.000000
Round %d: (3, 4.421803591402644)
Round 4: test_loss = 0.000000
Round %d: (4, 4.120734171582297)
Round 5: test_loss = 0.000000
Round %d: (5, 4.493521200028904)
Round 6: test_loss = 0.000000
Round %d: (6, 3.9866794036504882)
Round 7: test_loss = 0.000000
Round %d: (7, 4.1602307659720035)
Round 8: test_loss = 0.000000
Round %d: (8, 4.033034888835599)
Round 9: test_loss = 0.000000
Round %d: (9, 4.738433718802062)
Round 10: test_loss = 0.000000
Round %d: (10, 5.1652115417784366)
Round 11: test_loss = 0.000000
Round %d: (11, 4.702014940093432)
Round 12: test_loss = 0.000000
Round %d: (12, 4.232583887525343)
Round 13: test_loss = 0.000000
Round %d: (13, 4.415992219656653)
Round 14: test_loss = 0.000000
Round %d: (14, 5.035352318297349)
Round 15: test_loss = 0.000000
Round %d: (15, 4.664505781800639)
Round 16: test_loss = 0.000000
Round %d: (16, 5.121274633703079)
Round 17: test_loss = 0.000000
Round %d: (17, 4.873258715502148)
Round 18: test_loss = 0.000000
Round %d: (18, 4.703297798279026)
Round 19: test_loss = 0.000000
Round %d: (19, 4.309269375330642)
Round 20: test_loss = 0.000000
Round %d: (20, 4.056425983947947)
Round 21: test_loss = 0.000000
Round %d: (21, 4.775979641228997)
Round 22: test_loss = 0.000000
Round %d: (22, 4.627706196339628)
Round 23: test_loss = 0.000000
Round %d: (23, 4.473795903025222)
Round 24: test_loss = 0.000000
Round %d: (24, 4.323999296133277)
Round 25: test_loss = 0.000000
Round %d: (25, 4.588706988667897)
Round 26: test_loss = 0.000000
Round %d: (26, 4.280697222111726)
Round 27: test_loss = 0.000000
Round %d: (27, 4.909046718016932)
Round 28: test_loss = 0.000000
Round %d: (28, 4.855234710935971)
Round 29: test_loss = 0.000000
Round %d: (29, 4.5622613934146985)
Round 30: test_loss = 0.000000
Round %d: (30, 3.9188264900457375)
Round 31: test_loss = 0.000000
Round %d: (31, 4.271054180014034)
Round 32: test_loss = 0.000000
Round %d: (32, 5.071293911647931)
Round 33: test_loss = 0.000000
Round %d: (33, 4.242378671977701)
Round 34: test_loss = 0.000000
Round %d: (34, 4.522472331704033)
Round 35: test_loss = 0.000000
Round %d: (35, 4.6097150150320845)
Round 36: test_loss = 0.000000
Round %d: (36, 4.715273035719973)
Round 37: test_loss = 0.000000
Round %d: (37, 4.254433024813098)
Round 38: test_loss = 0.000000
Round %d: (38, 4.480870561237172)
Round 39: test_loss = 0.000000
Round %d: (39, 4.468346728644786)
Closest point in the train dataset to the real location: [547.8176  719.82776]
Minimum distance to the real location: 12.054167401254155
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 15.0077
  Jammer Localization Error (PL): 5.0491
  Jammer Localization Error (APBM): 4.4683
