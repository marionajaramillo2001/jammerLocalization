Monte Carlo Run 1/10 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 1
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  1000
Train X shape:  torch.Size([800, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [574. 703.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 2.1705949424040614)
Round 1: test_loss = 0.000000
Round %d: (1, 1.8274591153488309)
Round 2: test_loss = 0.000000
Round %d: (2, 0.87139203640518)
Round 3: test_loss = 0.000000
Round %d: (3, 0.7364602469677459)
Round 4: test_loss = 0.000000
Round %d: (4, 1.7658805308707837)
Round 5: test_loss = 0.000000
Round %d: (5, 0.7857181065934054)
Round 6: test_loss = 0.000000
Round %d: (6, 0.28625642046356864)
Round 7: test_loss = 0.000000
Round %d: (7, 0.8869383178051009)
Round 8: test_loss = 0.000000
Round %d: (8, 1.406453388721509)
Round 9: test_loss = 0.000000
Round %d: (9, 1.4747359171442564)
Round 10: test_loss = 0.000000
Round %d: (10, 2.7993432645637975)
Round 11: test_loss = 0.000000
Round %d: (11, 1.2188037176896525)
Round 12: test_loss = 0.000000
Round %d: (12, 1.6661428461497307)
Round 13: test_loss = 0.000000
Round %d: (13, 2.0822530299585447)
Round 14: test_loss = 0.000000
Round %d: (14, 1.4814849242198949)
Round 15: test_loss = 0.000000
Round %d: (15, 0.22837605441486472)
Round 16: test_loss = 0.000000
Round %d: (16, 0.7602049076536951)
Round 17: test_loss = 0.000000
Round %d: (17, 2.1850608904099253)
Round 18: test_loss = 0.000000
Round %d: (18, 2.2631337036668193)
Round 19: test_loss = 0.000000
Round %d: (19, 2.4697436963382144)
Round 20: test_loss = 0.000000
Round %d: (20, 1.19690192522779)
Round 21: test_loss = 0.000000
Round %d: (21, 1.3542696712856193)
Round 22: test_loss = 0.000000
Round %d: (22, 3.279958038520172)
Round 23: test_loss = 0.000000
Round %d: (23, 2.33739400757922)
Round 24: test_loss = 0.000000
Round %d: (24, 0.22097187406566574)
Round 25: test_loss = 0.000000
Round %d: (25, 1.520147565291812)
Round 26: test_loss = 0.000000
Round %d: (26, 2.611826901512828)
Round 27: test_loss = 0.000000
Round %d: (27, 0.3940343875065358)
Round 28: test_loss = 0.000000
Round %d: (28, 1.633390045180545)
Round 29: test_loss = 0.000000
Round %d: (29, 1.3290907656213484)
Round 30: test_loss = 0.000000
Round %d: (30, 0.5226713096174578)
Round 31: test_loss = 0.000000
Round %d: (31, 0.90639121265844)
Round 32: test_loss = 0.000000
Round %d: (32, 0.897446134388349)
Round 33: test_loss = 0.000000
Round %d: (33, 1.3692349194433207)
Round 34: test_loss = 0.000000
Round %d: (34, 1.6412646119018797)
Round 35: test_loss = 0.000000
Round %d: (35, 2.58123627621147)
Round 36: test_loss = 0.000000
Round %d: (36, 0.9350607291895014)
Round 37: test_loss = 0.000000
Round %d: (37, 0.6748173837561486)
Round 38: test_loss = 0.000000
Round %d: (38, 0.4237167224066172)
Round 39: test_loss = 0.000000
Round %d: (39, 3.1473680365686216)
Closest point in the train dataset to the real location: [539.86115 722.8166 ]
Minimum distance to the real location: 18.297141400038754
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 2.964184379862056)
Round 1: test_loss = 0.000000
Round %d: (1, 0.683611596535826)
Round 2: test_loss = 0.000000
Round %d: (2, 0.09473870745646354)
Round 3: test_loss = 0.000000
Round %d: (3, 0.5193670008120681)
Round 4: test_loss = 0.000000
Round %d: (4, 0.9858908936960298)
Round 5: test_loss = 0.000000
Round %d: (5, 1.3614213987965842)
Round 6: test_loss = 0.000000
Round %d: (6, 1.470801142919443)
Round 7: test_loss = 0.000000
Round %d: (7, 1.7450955163574864)
Round 8: test_loss = 0.000000
Round %d: (8, 1.3631416588381482)
Round 9: test_loss = 0.000000
Round %d: (9, 1.1756958663043393)
Round 10: test_loss = 0.000000
Round %d: (10, 3.456114067495951)
Round 11: test_loss = 0.000000
Round %d: (11, 1.708112208050148)
Round 12: test_loss = 0.000000
Round %d: (12, 1.3163529535940568)
Round 13: test_loss = 0.000000
Round %d: (13, 0.26964019515830284)
Round 14: test_loss = 0.000000
Round %d: (14, 2.6955277902458716)
Round 15: test_loss = 0.000000
Round %d: (15, 3.8154264589727056)
Round 16: test_loss = 0.000000
Round %d: (16, 2.1433591555656926)
Round 17: test_loss = 0.000000
Round %d: (17, 0.23912050182839706)
Round 18: test_loss = 0.000000
Round %d: (18, 1.1890852479874887)
Round 19: test_loss = 0.000000
Round %d: (19, 2.1847534973314393)
Round 20: test_loss = 0.000000
Round %d: (20, 0.6870495523363648)
Round 21: test_loss = 0.000000
Round %d: (21, 1.0215638577241646)
Round 22: test_loss = 0.000000
Round %d: (22, 2.915923731700125)
Round 23: test_loss = 0.000000
Round %d: (23, 2.4408904370602666)
Round 24: test_loss = 0.000000
Round %d: (24, 1.4176364608809424)
Round 25: test_loss = 0.000000
Round %d: (25, 1.7664694868897093)
Round 26: test_loss = 0.000000
Round %d: (26, 2.6542397580500605)
Round 27: test_loss = 0.000000
Round %d: (27, 0.7979669236213218)
Round 28: test_loss = 0.000000
Round %d: (28, 2.0963577582134114)
Round 29: test_loss = 0.000000
Round %d: (29, 1.6731201047743105)
Round 30: test_loss = 0.000000
Round %d: (30, 4.382141947109787)
Round 31: test_loss = 0.000000
Round %d: (31, 3.808138092642309)
Round 32: test_loss = 0.000000
Round %d: (32, 1.9279357561393302)
Round 33: test_loss = 0.000000
Round %d: (33, 0.7044490251047073)
Round 34: test_loss = 0.000000
Round %d: (34, 1.7762704090811854)
Round 35: test_loss = 0.000000
Round %d: (35, 2.105665316563321)
Round 36: test_loss = 0.000000
Round %d: (36, 1.191014149972389)
Round 37: test_loss = 0.000000
Round %d: (37, 1.3733118267860112)
Round 38: test_loss = 0.000000
Round %d: (38, 1.0002448940613085)
Round 39: test_loss = 0.000000
Round %d: (39, 1.6056126146850425)
Closest point in the train dataset to the real location: [539.86115 722.8166 ]
Minimum distance to the real location: 18.297141400038754
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 16.8053
  Jammer Localization Error (PL): 3.1474
  Jammer Localization Error (APBM): 1.6056
