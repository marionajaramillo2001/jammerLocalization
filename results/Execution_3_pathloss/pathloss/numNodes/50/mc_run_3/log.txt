Monte Carlo Run 4/10 with Seed: 45
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 50
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  1000
Train X shape:  torch.Size([800, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [617. 697.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 35.275739359429934)
Round 1: test_loss = 0.000000
Round %d: (1, 23.628114604797023)
Round 2: test_loss = 0.000000
Round %d: (2, 13.791574232284296)
Round 3: test_loss = 0.000000
Round %d: (3, 6.719490840373674)
Round 4: test_loss = 0.000000
Round %d: (4, 2.858222971672259)
Round 5: test_loss = 0.000000
Round %d: (5, 1.1799241761432628)
Round 6: test_loss = 0.000000
Round %d: (6, 0.7398279624661559)
Round 7: test_loss = 0.000000
Round %d: (7, 0.6888549327725205)
Round 8: test_loss = 0.000000
Round %d: (8, 0.816706717052291)
Round 9: test_loss = 0.000000
Round %d: (9, 0.800226053814617)
Round 10: test_loss = 0.000000
Round %d: (10, 0.6097356278490762)
Round 11: test_loss = 0.000000
Round %d: (11, 0.5352501195720912)
Round 12: test_loss = 0.000000
Round %d: (12, 0.558882052315784)
Round 13: test_loss = 0.000000
Round %d: (13, 0.6632308792889307)
Round 14: test_loss = 0.000000
Round %d: (14, 0.7454556604851238)
Round 15: test_loss = 0.000000
Round %d: (15, 0.8616904533376067)
Round 16: test_loss = 0.000000
Round %d: (16, 0.7768301866249148)
Round 17: test_loss = 0.000000
Round %d: (17, 0.7094722766694807)
Round 18: test_loss = 0.000000
Round %d: (18, 0.8719200406314235)
Round 19: test_loss = 0.000000
Round %d: (19, 0.6030569193583519)
Round 20: test_loss = 0.000000
Round %d: (20, 0.6582865176696151)
Round 21: test_loss = 0.000000
Round %d: (21, 0.613816490037495)
Round 22: test_loss = 0.000000
Round %d: (22, 0.7020300204188306)
Round 23: test_loss = 0.000000
Round %d: (23, 0.7254182696209166)
Round 24: test_loss = 0.000000
Round %d: (24, 0.615199443883391)
Round 25: test_loss = 0.000000
Round %d: (25, 0.47297474412364887)
Round 26: test_loss = 0.000000
Round %d: (26, 0.5593495095451645)
Round 27: test_loss = 0.000000
Round %d: (27, 0.6483906108143561)
Round 28: test_loss = 0.000000
Round %d: (28, 0.7369439246632726)
Round 29: test_loss = 0.000000
Round %d: (29, 0.7741841351168387)
Round 30: test_loss = 0.000000
Round %d: (30, 0.6919348661667163)
Round 31: test_loss = 0.000000
Round %d: (31, 0.7916525919338414)
Round 32: test_loss = 0.000000
Round %d: (32, 0.7604375899286323)
Round 33: test_loss = 0.000000
Round %d: (33, 0.6857463526580857)
Round 34: test_loss = 0.000000
Round %d: (34, 0.7362535114388754)
Round 35: test_loss = 0.000000
Round %d: (35, 0.6181365248120119)
Round 36: test_loss = 0.000000
Round %d: (36, 0.8045551108949259)
Round 37: test_loss = 0.000000
Round %d: (37, 0.923743029615378)
Round 38: test_loss = 0.000000
Round %d: (38, 0.6530487396400244)
Round 39: test_loss = 0.000000
Round %d: (39, 0.580928365492017)
Closest point in the train dataset to the real location: [562.9606 706.0058]
Minimum distance to the real location: 12.34984932163229
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 48.96678239957499)
Round 1: test_loss = 0.000000
Round %d: (1, 43.21401494775612)
Round 2: test_loss = 0.000000
Round %d: (2, 36.63023058942617)
Round 3: test_loss = 0.000000
Round %d: (3, 30.346868141243316)
Round 4: test_loss = 0.000000
Round %d: (4, 24.253146519111954)
Round 5: test_loss = 0.000000
Round %d: (5, 19.085557893071844)
Round 6: test_loss = 0.000000
Round %d: (6, 14.29947974373259)
Round 7: test_loss = 0.000000
Round %d: (7, 10.492098197505369)
Round 8: test_loss = 0.000000
Round %d: (8, 7.227368775303375)
Round 9: test_loss = 0.000000
Round %d: (9, 5.393300215507766)
Round 10: test_loss = 0.000000
Round %d: (10, 3.8094159369245513)
Round 11: test_loss = 0.000000
Round %d: (11, 2.6717760672449775)
Round 12: test_loss = 0.000000
Round %d: (12, 2.17895788059997)
Round 13: test_loss = 0.000000
Round %d: (13, 2.3739010202199538)
Round 14: test_loss = 0.000000
Round %d: (14, 2.2119867021113717)
Round 15: test_loss = 0.000000
Round %d: (15, 2.1720264040066186)
Round 16: test_loss = 0.000000
Round %d: (16, 1.9490563534238425)
Round 17: test_loss = 0.000000
Round %d: (17, 2.193400278761638)
Round 18: test_loss = 0.000000
Round %d: (18, 2.1498023880878194)
Round 19: test_loss = 0.000000
Round %d: (19, 1.9784888466442936)
Round 20: test_loss = 0.000000
Round %d: (20, 2.1332775638995547)
Round 21: test_loss = 0.000000
Round %d: (21, 1.8856795320952071)
Round 22: test_loss = 0.000000
Round %d: (22, 2.0905362760015884)
Round 23: test_loss = 0.000000
Round %d: (23, 1.859150277384497)
Round 24: test_loss = 0.000000
Round %d: (24, 1.8602552302946016)
Round 25: test_loss = 0.000000
Round %d: (25, 1.6362742618391846)
Round 26: test_loss = 0.000000
Round %d: (26, 1.6830156225829593)
Round 27: test_loss = 0.000000
Round %d: (27, 1.6942375685726323)
Round 28: test_loss = 0.000000
Round %d: (28, 1.599219237331113)
Round 29: test_loss = 0.000000
Round %d: (29, 1.494460249890884)
Round 30: test_loss = 0.000000
Round %d: (30, 1.4620185174616407)
Round 31: test_loss = 0.000000
Round %d: (31, 1.6646134359990719)
Round 32: test_loss = 0.000000
Round %d: (32, 1.5237945667664)
Round 33: test_loss = 0.000000
Round %d: (33, 1.5082195253793613)
Round 34: test_loss = 0.000000
Round %d: (34, 1.7362199263444205)
Round 35: test_loss = 0.000000
Round %d: (35, 1.6333585921419134)
Round 36: test_loss = 0.000000
Round %d: (36, 1.5384524885993722)
Round 37: test_loss = 0.000000
Round %d: (37, 1.5228647398068742)
Round 38: test_loss = 0.000000
Round %d: (38, 1.5716520270258751)
Round 39: test_loss = 0.000000
Round %d: (39, 1.644480999565127)
Closest point in the train dataset to the real location: [562.9606 706.0058]
Minimum distance to the real location: 12.34984932163229
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 47.4710
  Jammer Localization Error (PL): 0.5809
  Jammer Localization Error (APBM): 1.6445
