Monte Carlo Run 9/10 with Seed: 50
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 250
Number of valid samples:  250
Train X shape:  torch.Size([200, 2])
Test X shape:  torch.Size([50, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [502. 753.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 33.34801411346637)
Round 1: test_loss = 0.000000
Round %d: (1, 21.61677639212)
Round 2: test_loss = 0.000000
Round %d: (2, 10.741386839895393)
Round 3: test_loss = 0.000000
Round %d: (3, 3.730993441524838)
Round 4: test_loss = 0.000000
Round %d: (4, 1.4145751807466158)
Round 5: test_loss = 0.000000
Round %d: (5, 2.0785301185826572)
Round 6: test_loss = 0.000000
Round %d: (6, 2.1516776147586154)
Round 7: test_loss = 0.000000
Round %d: (7, 2.739110552556879)
Round 8: test_loss = 0.000000
Round %d: (8, 2.747803068349391)
Round 9: test_loss = 0.000000
Round %d: (9, 2.2870502589909005)
Round 10: test_loss = 0.000000
Round %d: (10, 2.9063647273766415)
Round 11: test_loss = 0.000000
Round %d: (11, 3.373892126562525)
Round 12: test_loss = 0.000000
Round %d: (12, 2.8436023267183272)
Round 13: test_loss = 0.000000
Round %d: (13, 2.7025563329087037)
Round 14: test_loss = 0.000000
Round %d: (14, 3.350085894092676)
Round 15: test_loss = 0.000000
Round %d: (15, 2.2372071488530727)
Round 16: test_loss = 0.000000
Round %d: (16, 3.0654694817280173)
Round 17: test_loss = 0.000000
Round %d: (17, 3.4415845710166835)
Round 18: test_loss = 0.000000
Round %d: (18, 3.2396441956064264)
Round 19: test_loss = 0.000000
Round %d: (19, 3.0179219728858695)
Round 20: test_loss = 0.000000
Round %d: (20, 3.353905081189672)
Round 21: test_loss = 0.000000
Round %d: (21, 3.011223858735035)
Round 22: test_loss = 0.000000
Round %d: (22, 3.1798926759163564)
Round 23: test_loss = 0.000000
Round %d: (23, 2.749775012870657)
Round 24: test_loss = 0.000000
Round %d: (24, 2.252246890206456)
Round 25: test_loss = 0.000000
Round %d: (25, 2.5096993237023857)
Round 26: test_loss = 0.000000
Round %d: (26, 2.7571473778870486)
Round 27: test_loss = 0.000000
Round %d: (27, 2.5771873303830244)
Round 28: test_loss = 0.000000
Round %d: (28, 2.386600717348324)
Round 29: test_loss = 0.000000
Round %d: (29, 2.4351347205298794)
Round 30: test_loss = 0.000000
Round %d: (30, 2.6479458233102418)
Round 31: test_loss = 0.000000
Round %d: (31, 2.7449283115902707)
Round 32: test_loss = 0.000000
Round %d: (32, 2.9975711328192087)
Round 33: test_loss = 0.000000
Round %d: (33, 3.068387982721373)
Round 34: test_loss = 0.000000
Round %d: (34, 2.8879161776580635)
Round 35: test_loss = 0.000000
Round %d: (35, 3.2399049842500607)
Round 36: test_loss = 0.000000
Round %d: (36, 3.44640709080083)
Round 37: test_loss = 0.000000
Round %d: (37, 3.4151409182175794)
Round 38: test_loss = 0.000000
Round %d: (38, 3.659015708902033)
Round 39: test_loss = 0.000000
Round %d: (39, 2.920421948227206)
Closest point in the train dataset to the real location: [586.5312 694.0416]
Minimum distance to the real location: 38.41682626062168
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 51.11646776583591)
Round 1: test_loss = 0.000000
Round %d: (1, 47.75818608195789)
Round 2: test_loss = 0.000000
Round %d: (2, 41.62830731457589)
Round 3: test_loss = 0.000000
Round %d: (3, 36.075579925617305)
Round 4: test_loss = 0.000000
Round %d: (4, 30.909253062325334)
Round 5: test_loss = 0.000000
Round %d: (5, 25.192574271806006)
Round 6: test_loss = 0.000000
Round %d: (6, 19.742479945498907)
Round 7: test_loss = 0.000000
Round %d: (7, 14.242390613282105)
Round 8: test_loss = 0.000000
Round %d: (8, 10.669754172773482)
Round 9: test_loss = 0.000000
Round %d: (9, 8.037756789304234)
Round 10: test_loss = 0.000000
Round %d: (10, 5.521191133983242)
Round 11: test_loss = 0.000000
Round %d: (11, 3.7506135429841545)
Round 12: test_loss = 0.000000
Round %d: (12, 3.4434478633854306)
Round 13: test_loss = 0.000000
Round %d: (13, 3.541845764116059)
Round 14: test_loss = 0.000000
Round %d: (14, 3.9641733273856743)
Round 15: test_loss = 0.000000
Round %d: (15, 3.5131350397275196)
Round 16: test_loss = 0.000000
Round %d: (16, 4.803195186161322)
Round 17: test_loss = 0.000000
Round %d: (17, 4.183309960246289)
Round 18: test_loss = 0.000000
Round %d: (18, 3.969122798272179)
Round 19: test_loss = 0.000000
Round %d: (19, 4.237580230667574)
Round 20: test_loss = 0.000000
Round %d: (20, 4.379612494501029)
Round 21: test_loss = 0.000000
Round %d: (21, 4.196422157496856)
Round 22: test_loss = 0.000000
Round %d: (22, 4.502831565390086)
Round 23: test_loss = 0.000000
Round %d: (23, 4.188919507551217)
Round 24: test_loss = 0.000000
Round %d: (24, 4.525343488453348)
Round 25: test_loss = 0.000000
Round %d: (25, 4.741579895239957)
Round 26: test_loss = 0.000000
Round %d: (26, 3.906972454169795)
Round 27: test_loss = 0.000000
Round %d: (27, 3.9772832264379825)
Round 28: test_loss = 0.000000
Round %d: (28, 4.221213016290184)
Round 29: test_loss = 0.000000
Round %d: (29, 3.8941590661395433)
Round 30: test_loss = 0.000000
Round %d: (30, 4.319293585083247)
Round 31: test_loss = 0.000000
Round %d: (31, 4.504226884784208)
Round 32: test_loss = 0.000000
Round %d: (32, 4.502550877665943)
Round 33: test_loss = 0.000000
Round %d: (33, 4.361463239927722)
Round 34: test_loss = 0.000000
Round %d: (34, 4.166657846234851)
Round 35: test_loss = 0.000000
Round %d: (35, 4.4739643050805515)
Round 36: test_loss = 0.000000
Round %d: (36, 4.75667256441138)
Round 37: test_loss = 0.000000
Round %d: (37, 4.911600695892048)
Round 38: test_loss = 0.000000
Round %d: (38, 4.4767162435446215)
Round 39: test_loss = 0.000000
Round %d: (39, 4.313897937049069)
Closest point in the train dataset to the real location: [547.8176  719.82776]
Minimum distance to the real location: 12.054167401254155
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 46.8666
  Jammer Localization Error (PL): 2.9204
  Jammer Localization Error (APBM): 4.3139
