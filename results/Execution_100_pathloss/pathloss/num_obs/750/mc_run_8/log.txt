Monte Carlo Run 9/10 with Seed: 50
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSS-FL/datasets/dataPLANS/4.definitive/PL2/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 750
Number of valid samples:  750
Train X shape:  torch.Size([600, 2])
Test X shape:  torch.Size([150, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [572. 730.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 2.547158806697315)
Round 1: test_loss = 0.000000
Round %d: (1, 0.9577380994512396)
Round 2: test_loss = 0.000000
Round %d: (2, 1.1543812635546677)
Round 3: test_loss = 0.000000
Round %d: (3, 1.060599622204385)
Round 4: test_loss = 0.000000
Round %d: (4, 0.7277993098900528)
Round 5: test_loss = 0.000000
Round %d: (5, 0.8591440689799305)
Round 6: test_loss = 0.000000
Round %d: (6, 0.9703518391643552)
Round 7: test_loss = 0.000000
Round %d: (7, 0.7050192724298453)
Round 8: test_loss = 0.000000
Round %d: (8, 0.7114177619678631)
Round 9: test_loss = 0.000000
Round %d: (9, 1.1454687318366394)
Round 10: test_loss = 0.000000
Round %d: (10, 0.994120907995476)
Round 11: test_loss = 0.000000
Round %d: (11, 0.864477283962235)
Round 12: test_loss = 0.000000
Round %d: (12, 0.640254756900643)
Round 13: test_loss = 0.000000
Round %d: (13, 0.6223914654890121)
Round 14: test_loss = 0.000000
Round %d: (14, 0.5500056475327716)
Round 15: test_loss = 0.000000
Round %d: (15, 0.7211544662454593)
Round 16: test_loss = 0.000000
Round %d: (16, 0.7108677282967115)
Round 17: test_loss = 0.000000
Round %d: (17, 0.6327711933282834)
Round 18: test_loss = 0.000000
Round %d: (18, 0.8710714650521608)
Round 19: test_loss = 0.000000
Round %d: (19, 0.5306899648657051)
Round 20: test_loss = 0.000000
Round %d: (20, 0.7826408980188106)
Round 21: test_loss = 0.000000
Round %d: (21, 0.6324317337944317)
Round 22: test_loss = 0.000000
Round %d: (22, 0.5981469662914899)
Round 23: test_loss = 0.000000
Round %d: (23, 0.579142293096609)
Round 24: test_loss = 0.000000
Round %d: (24, 0.6666510118784681)
Round 25: test_loss = 0.000000
Round %d: (25, 0.6909561687818861)
Round 26: test_loss = 0.000000
Round %d: (26, 0.7576921923782252)
Round 27: test_loss = 0.000000
Round %d: (27, 1.1348165702890742)
Round 28: test_loss = 0.000000
Round %d: (28, 0.8465688473052229)
Round 29: test_loss = 0.000000
Round %d: (29, 0.6662645759874584)
Round 30: test_loss = 0.000000
Round %d: (30, 0.6273645840717429)
Round 31: test_loss = 0.000000
Round %d: (31, 0.8390759685564989)
Round 32: test_loss = 0.000000
Round %d: (32, 0.8999939131189818)
Round 33: test_loss = 0.000000
Round %d: (33, 0.41238907502669503)
Round 34: test_loss = 0.000000
Round %d: (34, 0.5192648112427951)
Round 35: test_loss = 0.000000
Round %d: (35, 0.7984797698015906)
Round 36: test_loss = 0.000000
Round %d: (36, 1.044755684772724)
Round 37: test_loss = 0.000000
Round %d: (37, 0.6550375080050999)
Round 38: test_loss = 0.000000
Round %d: (38, 0.9045189824694481)
Round 39: test_loss = 0.000000
Round %d: (39, 0.6652369021612191)
Closest point in the train dataset to the real location: [547.8176  719.82776]
Minimum distance to the real location: 12.054167401254155
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 17.966444266272322)
Round 1: test_loss = 0.000000
Round %d: (1, 6.840839503568911)
Round 2: test_loss = 0.000000
Round %d: (2, 3.506938662957809)
Round 3: test_loss = 0.000000
Round %d: (3, 1.471363948838515)
Round 4: test_loss = 0.000000
Round %d: (4, 1.2495329537830744)
Round 5: test_loss = 0.000000
Round %d: (5, 1.0445165803090464)
Round 6: test_loss = 0.000000
Round %d: (6, 0.712569967387569)
Round 7: test_loss = 0.000000
Round %d: (7, 1.6708560431792783)
Round 8: test_loss = 0.000000
Round %d: (8, 1.3530798808530435)
Round 9: test_loss = 0.000000
Round %d: (9, 2.0965456829816658)
Round 10: test_loss = 0.000000
Round %d: (10, 1.650336694894575)
Round 11: test_loss = 0.000000
Round %d: (11, 1.170549324306378)
Round 12: test_loss = 0.000000
Round %d: (12, 1.1010540453487607)
Round 13: test_loss = 0.000000
Round %d: (13, 1.6627918455628559)
Round 14: test_loss = 0.000000
Round %d: (14, 1.932677812627683)
Round 15: test_loss = 0.000000
Round %d: (15, 1.0947989120563344)
Round 16: test_loss = 0.000000
Round %d: (16, 1.1914260237416123)
Round 17: test_loss = 0.000000
Round %d: (17, 2.041240764731618)
Round 18: test_loss = 0.000000
Round %d: (18, 1.4552489638998933)
Round 19: test_loss = 0.000000
Round %d: (19, 1.188941442400961)
Round 20: test_loss = 0.000000
Round %d: (20, 1.4613595921640326)
Round 21: test_loss = 0.000000
Round %d: (21, 1.1552565652499895)
Round 22: test_loss = 0.000000
Round %d: (22, 1.5311375793906954)
Round 23: test_loss = 0.000000
Round %d: (23, 1.7088706454116809)
Round 24: test_loss = 0.000000
Round %d: (24, 1.162860111984953)
Round 25: test_loss = 0.000000
Round %d: (25, 1.5903654815034503)
Round 26: test_loss = 0.000000
Round %d: (26, 1.8715651387636043)
Round 27: test_loss = 0.000000
Round %d: (27, 0.8550499940062043)
Round 28: test_loss = 0.000000
Round %d: (28, 1.3901071332836914)
Round 29: test_loss = 0.000000
Round %d: (29, 1.4615078965351775)
Round 30: test_loss = 0.000000
Round %d: (30, 1.4146562670901883)
Round 31: test_loss = 0.000000
Round %d: (31, 1.0527420417776236)
Round 32: test_loss = 0.000000
Round %d: (32, 1.0119249990223147)
Round 33: test_loss = 0.000000
Round %d: (33, 1.1254874181478065)
Round 34: test_loss = 0.000000
Round %d: (34, 1.698944515462196)
Round 35: test_loss = 0.000000
Round %d: (35, 1.5136429192375667)
Round 36: test_loss = 0.000000
Round %d: (36, 1.1265119825476078)
Round 37: test_loss = 0.000000
Round %d: (37, 1.0999560359124707)
Round 38: test_loss = 0.000000
Round %d: (38, 0.6850548786519203)
Round 39: test_loss = 0.000000
Round %d: (39, 1.2657527406575988)
Closest point in the train dataset to the real location: [547.8176  719.82776]
Minimum distance to the real location: 12.054167401254155
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 21.5296
  Jammer Localization Error (PL): 0.6652
  Jammer Localization Error (APBM): 1.2658
