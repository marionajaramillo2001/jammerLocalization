Monte Carlo Run 1/1 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 1
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
model_type: PL
num_obs: 1000
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [443. 539.]
Training the PL model...
Round 0: test_loss = 0.796449
Round %d: (0, (76.59871952724387, array([398.73271681, 538.99734471])))
Round 1: test_loss = 0.648197
Round %d: (1, (16.12705985416036, array([481.87474047, 513.74453822])))
Round 2: test_loss = 0.636947
Round %d: (2, (13.23121168244229, array([485.09711717, 511.21535549])))
Round 3: test_loss = 0.653677
Round %d: (3, (14.704022755899265, array([485.27932919, 514.44839133])))
Round 4: test_loss = 0.636534
Round %d: (4, (15.090339140492834, array([483.95396582, 513.8939429 ])))
Round 5: test_loss = 0.650528
Round %d: (5, (14.011047251243692, array([485.5518328 , 513.34880873])))
Round 6: test_loss = 0.620222
Round %d: (6, (13.05640717965857, array([487.4461334 , 513.26542348])))
Round 7: test_loss = 0.632260
Round %d: (7, (12.770151578473413, array([487.67334584, 512.92662123])))
Round 8: test_loss = 0.644321
Round %d: (8, (13.95293740732765, array([486.31823458, 513.96098464])))
Round 9: test_loss = 0.634025
Round %d: (9, (14.286973819001396, array([486.84669666, 515.03161998])))
Round 10: test_loss = 0.625975
Round %d: (10, (13.9587285442153, array([486.52658597, 514.15685265])))
Round 11: test_loss = 0.633345
Round %d: (11, (13.38484699134959, array([486.63020352, 513.15743811])))
Round 12: test_loss = 0.647551
Round %d: (12, (14.510431492360235, array([486.52718341, 515.17925288])))
Round 13: test_loss = 0.630993
Round %d: (13, (13.162424401719727, array([486.72231106, 512.81247866])))
Round 14: test_loss = 0.632080
Round %d: (14, (13.399490395866474, array([486.82345533, 513.36264606])))
Round 15: test_loss = 0.649162
Round %d: (15, (14.041104497015853, array([485.49716561, 513.35435241])))
Round 16: test_loss = 0.623080
Round %d: (16, (12.88446026977838, array([487.14160542, 512.66660791])))
Round 17: test_loss = 0.626258
Round %d: (17, (13.445155295515502, array([487.36773566, 513.91969989])))
Round 18: test_loss = 0.642678
Round %d: (18, (13.60482158064723, array([486.36222772, 513.33282694])))
Round 19: test_loss = 0.645941
Round %d: (19, (12.918185459626676, array([487.7390176 , 513.25854856])))
Round 20: test_loss = 0.617041
Round %d: (20, (12.430773396445817, array([486.20145222, 510.76901753])))
Round 21: test_loss = 0.629692
Round %d: (21, (15.685756831076404, array([486.59912796, 517.32741851])))
Round 22: test_loss = 0.623911
Round %d: (22, (15.265275247557835, array([485.88478078, 516.03288718])))
Round 23: test_loss = 0.648805
Round %d: (23, (13.041086652692185, array([486.98892664, 512.82711167])))
Round 24: test_loss = 0.633702
Round %d: (24, (14.24495410734978, array([485.99181466, 514.2226263 ])))
Round 25: test_loss = 0.622881
Round %d: (25, (13.748728559504693, array([486.64088208, 513.86186508])))
Round 26: test_loss = 0.630923
Round %d: (26, (14.262505075547319, array([485.78449718, 514.06592498])))
Round 27: test_loss = 0.627727
Round %d: (27, (14.99224557003934, array([487.29057524, 516.61571088])))
Round 28: test_loss = 0.633408
Round %d: (28, (14.984180396272473, array([485.06901382, 514.79424364])))
Round 29: test_loss = 0.626056
Round %d: (29, (14.810330787779414, array([485.99305863, 515.28651534])))
Round 30: test_loss = 0.616634
Round %d: (30, (14.16820618680576, array([487.63510383, 515.4273035 ])))
Round 31: test_loss = 0.625113
Round %d: (31, (14.8844664033185, array([486.95213936, 516.1819722 ])))
Round 32: test_loss = 0.658604
Round %d: (32, (17.09981728032521, array([485.52389073, 519.01684806])))
Round 33: test_loss = 0.651102
Round %d: (33, (13.940108863063003, array([488.55221554, 515.67773392])))
Round 34: test_loss = 0.638202
Round %d: (34, (18.131216202619434, array([489.89879068, 523.06474542])))
Round 35: test_loss = 0.630272
Round %d: (35, (22.061839955913918, array([510.67143441, 528.4384693 ])))
Round 36: test_loss = 0.630780
Round %d: (36, (22.498832357566762, array([510.63296908, 529.1135757 ])))
Round 37: test_loss = 0.642415
Round %d: (37, (22.38800772525587, array([509.75051313, 529.2621237 ])))
Round 38: test_loss = 0.638005
Round %d: (38, (22.950938392055825, array([509.08245166, 530.31594678])))
Round 39: test_loss = 0.654464
Round %d: (39, (22.639006034053285, array([510.07280958, 529.52639285])))
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss: 0.6545
  Jammer Initial Localization Error: 48.8421
  Jammer Localization Error: 22.6390
