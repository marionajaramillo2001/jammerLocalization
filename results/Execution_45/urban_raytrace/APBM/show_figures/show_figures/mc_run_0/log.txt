Monte Carlo Run 1/1 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT37/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
model_type: APBM
num_obs: 1000
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [499. 511.]
Training the APBM model...
Round 0: test_loss = 2.249985
Round %d: (0, (7.797372946547387, array([499., 511.])))
Round 1: test_loss = 1.322483
Round %d: (1, (7.797372946547387, array([499., 511.])))
Round 2: test_loss = 0.866931
Round %d: (2, (7.797372946547387, array([499., 511.])))
Round 3: test_loss = 0.950225
Round %d: (3, (7.797372946547387, array([499., 511.])))
Round 4: test_loss = 0.883969
Round %d: (4, (7.797372946547387, array([499., 511.])))
Round 5: test_loss = 0.790891
Round %d: (5, (7.797372946547387, array([499., 511.])))
Round 6: test_loss = 0.889604
Round %d: (6, (7.797372946547387, array([499., 511.])))
Round 7: test_loss = 0.758239
Round %d: (7, (7.797372946547387, array([499., 511.])))
Round 8: test_loss = 0.673626
Round %d: (8, (7.797372946547387, array([499., 511.])))
Round 9: test_loss = 0.646155
Round %d: (9, (7.797372946547387, array([499., 511.])))
Round 10: test_loss = 0.644831
Round %d: (10, (7.797372946547387, array([499., 511.])))
Round 11: test_loss = 0.815219
Round %d: (11, (7.797372946547387, array([499., 511.])))
Round 12: test_loss = 0.631380
Round %d: (12, (7.797372946547387, array([499., 511.])))
Round 13: test_loss = 0.642412
Round %d: (13, (7.797372946547387, array([499., 511.])))
Round 14: test_loss = 0.723658
Round %d: (14, (7.797372946547387, array([499., 511.])))
Round 15: test_loss = 0.767160
Round %d: (15, (7.797372946547387, array([499., 511.])))
Round 16: test_loss = 0.725743
Round %d: (16, (7.797372946547387, array([499., 511.])))
Round 17: test_loss = 0.650674
Round %d: (17, (7.797372946547387, array([499., 511.])))
Round 18: test_loss = 0.676783
Round %d: (18, (7.797372946547387, array([499., 511.])))
Round 19: test_loss = 0.658704
Round %d: (19, (7.797372946547387, array([499., 511.])))
Round 20: test_loss = 0.651923
Round %d: (20, (7.797372946547387, array([499., 511.])))
Round 21: test_loss = 0.694170
Round %d: (21, (7.797372946547387, array([499., 511.])))
Round 22: test_loss = 0.666699
Round %d: (22, (7.797372946547387, array([499., 511.])))
Round 23: test_loss = 0.695726
Round %d: (23, (7.797372946547387, array([499., 511.])))
Round 24: test_loss = 0.637275
Round %d: (24, (7.797372946547387, array([499., 511.])))
Round 25: test_loss = 0.701745
Round %d: (25, (7.797372946547387, array([499., 511.])))
Round 26: test_loss = 0.646745
Round %d: (26, (7.797372946547387, array([499., 511.])))
Round 27: test_loss = 0.703450
Round %d: (27, (7.797372946547387, array([499., 511.])))
Round 28: test_loss = 0.724060
Round %d: (28, (7.797372946547387, array([499., 511.])))
Round 29: test_loss = 0.583704
Round %d: (29, (7.797372946547387, array([499., 511.])))
Round 30: test_loss = 0.668432
Round %d: (30, (7.797372946547387, array([499., 511.])))
Round 31: test_loss = 0.663869
Round %d: (31, (7.797372946547387, array([499., 511.])))
Round 32: test_loss = 0.623504
Round %d: (32, (7.797372946547387, array([499., 511.])))
Round 33: test_loss = 0.663851
Round %d: (33, (7.797372946547387, array([499., 511.])))
Round 34: test_loss = 0.554229
Round %d: (34, (7.797372946547387, array([499., 511.])))
Round 35: test_loss = 0.679538
Round %d: (35, (7.797372946547387, array([499., 511.])))
Round 36: test_loss = 0.603670
Round %d: (36, (7.797372946547387, array([499., 511.])))
Round 37: test_loss = 0.657665
Round %d: (37, (7.797372946547387, array([499., 511.])))
Round 38: test_loss = 0.552536
Round %d: (38, (7.797372946547387, array([499., 511.])))
Round 39: test_loss = 0.703808
Round %d: (39, (7.797372946547387, array([499., 511.])))
Closest point in the train dataset to the real location: [503.31326 511.12265]
Minimum distance to the real location: 11.764632994837628
  Global Test Loss: 0.7038
  Jammer Initial Localization Error: 7.7974
  Jammer Localization Error: 7.7974
