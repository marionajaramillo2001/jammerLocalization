Monte Carlo Run 5/10 with Seed: 46
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT36/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [428. 509.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 61.403285242952315)
Round 1: test_loss = 0.000000
Round %d: (1, 73.59931069408273)
Round 2: test_loss = 0.000000
Round %d: (2, 80.50145813776318)
Round 3: test_loss = 0.000000
Round %d: (3, 76.76808823977959)
Round 4: test_loss = 0.000000
Round %d: (4, 69.8687170920512)
Round 5: test_loss = 0.000000
Round %d: (5, 62.40389371659814)
Round 6: test_loss = 0.000000
Round %d: (6, 51.655233400470166)
Round 7: test_loss = 0.000000
Round %d: (7, 39.426668414245896)
Round 8: test_loss = 0.000000
Round %d: (8, 27.756787103844356)
Round 9: test_loss = 0.000000
Round %d: (9, 16.95952509170105)
Round 10: test_loss = 0.000000
Round %d: (10, 9.812856575571196)
Round 11: test_loss = 0.000000
Round %d: (11, 5.497005609410112)
Round 12: test_loss = 0.000000
Round %d: (12, 4.003218456041646)
Round 13: test_loss = 0.000000
Round %d: (13, 2.396419397630655)
Round 14: test_loss = 0.000000
Round %d: (14, 1.3830604776200932)
Round 15: test_loss = 0.000000
Round %d: (15, 1.7060485352010493)
Round 16: test_loss = 0.000000
Round %d: (16, 2.244272127725857)
Round 17: test_loss = 0.000000
Round %d: (17, 2.302854915073335)
Round 18: test_loss = 0.000000
Round %d: (18, 1.4713425532323599)
Round 19: test_loss = 0.000000
Round %d: (19, 1.843730379945823)
Round 20: test_loss = 0.000000
Round %d: (20, 0.9223117915821077)
Round 21: test_loss = 0.000000
Round %d: (21, 1.1552504329322133)
Round 22: test_loss = 0.000000
Round %d: (22, 1.5126442877968387)
Round 23: test_loss = 0.000000
Round %d: (23, 2.0081372496581023)
Round 24: test_loss = 0.000000
Round %d: (24, 2.4444655705128446)
Round 25: test_loss = 0.000000
Round %d: (25, 2.9294540736959926)
Round 26: test_loss = 0.000000
Round %d: (26, 2.179574736411832)
Round 27: test_loss = 0.000000
Round %d: (27, 1.9264261960835583)
Round 28: test_loss = 0.000000
Round %d: (28, 2.6603156342455248)
Round 29: test_loss = 0.000000
Round %d: (29, 3.0947724047775313)
Round 30: test_loss = 0.000000
Round %d: (30, 1.738320737175979)
Round 31: test_loss = 0.000000
Round %d: (31, 2.0918353758610437)
Round 32: test_loss = 0.000000
Round %d: (32, 1.824540690560117)
Round 33: test_loss = 0.000000
Round %d: (33, 2.4487406309532136)
Round 34: test_loss = 0.000000
Round %d: (34, 1.7145360562736396)
Round 35: test_loss = 0.000000
Round %d: (35, 2.073552519024916)
Round 36: test_loss = 0.000000
Round %d: (36, 1.4836727158607443)
Round 37: test_loss = 0.000000
Round %d: (37, 1.8377256730605656)
Round 38: test_loss = 0.000000
Round %d: (38, 1.9947831384851513)
Round 39: test_loss = 0.000000
Round %d: (39, 2.597284846112063)
Closest point in the train dataset to the real location: [503.93417 514.6261 ]
Minimum distance to the real location: 15.95012959699445
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 60.17877202550467)
Round 1: test_loss = 0.000000
Round %d: (1, 69.87625777313107)
Round 2: test_loss = 0.000000
Round %d: (2, 65.82015882891352)
Round 3: test_loss = 0.000000
Round %d: (3, 57.70965791389109)
Round 4: test_loss = 0.000000
Round %d: (4, 49.82819524294998)
Round 5: test_loss = 0.000000
Round %d: (5, 42.81444151437499)
Round 6: test_loss = 0.000000
Round %d: (6, 37.518567579480184)
Round 7: test_loss = 0.000000
Round %d: (7, 33.29070664580021)
Round 8: test_loss = 0.000000
Round %d: (8, 28.61590688507987)
Round 9: test_loss = 0.000000
Round %d: (9, 26.95091199791237)
Round 10: test_loss = 0.000000
Round %d: (10, 25.947214067593794)
Round 11: test_loss = 0.000000
Round %d: (11, 25.001876732351136)
Round 12: test_loss = 0.000000
Round %d: (12, 24.68653687570575)
Round 13: test_loss = 0.000000
Round %d: (13, 21.79995488360185)
Round 14: test_loss = 0.000000
Round %d: (14, 19.426634663232637)
Round 15: test_loss = 0.000000
Round %d: (15, 19.850167957052665)
Round 16: test_loss = 0.000000
Round %d: (16, 18.71194355783628)
Round 17: test_loss = 0.000000
Round %d: (17, 18.458646111801922)
Round 18: test_loss = 0.000000
Round %d: (18, 19.04387306218709)
Round 19: test_loss = 0.000000
Round %d: (19, 18.568917736749665)
Round 20: test_loss = 0.000000
Round %d: (20, 16.743261109873426)
Round 21: test_loss = 0.000000
Round %d: (21, 16.189951906690883)
Round 22: test_loss = 0.000000
Round %d: (22, 16.575310143169983)
Round 23: test_loss = 0.000000
Round %d: (23, 17.56066189878404)
Round 24: test_loss = 0.000000
Round %d: (24, 17.318699640832335)
Round 25: test_loss = 0.000000
Round %d: (25, 16.395767469971105)
Round 26: test_loss = 0.000000
Round %d: (26, 17.71061259714117)
Round 27: test_loss = 0.000000
Round %d: (27, 17.516875779451624)
Round 28: test_loss = 0.000000
Round %d: (28, 16.883648925652828)
Round 29: test_loss = 0.000000
Round %d: (29, 16.012671003265698)
Round 30: test_loss = 0.000000
Round %d: (30, 16.409383237093458)
Round 31: test_loss = 0.000000
Round %d: (31, 15.329567792943296)
Round 32: test_loss = 0.000000
Round %d: (32, 15.929622739119068)
Round 33: test_loss = 0.000000
Round %d: (33, 16.06988209688036)
Round 34: test_loss = 0.000000
Round %d: (34, 16.615517180847508)
Round 35: test_loss = 0.000000
Round %d: (35, 16.67300698459907)
Round 36: test_loss = 0.000000
Round %d: (36, 18.463702437199164)
Round 37: test_loss = 0.000000
Round %d: (37, 19.06454051934802)
Round 38: test_loss = 0.000000
Round %d: (38, 17.991462957408757)
Round 39: test_loss = 0.000000
Round %d: (39, 18.08427407169731)
Closest point in the train dataset to the real location: [503.93417 514.6261 ]
Minimum distance to the real location: 15.95012959699445
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 51.0376
  Jammer Localization Error (PL): 2.5973
  Jammer Localization Error (APBM): 18.0843
