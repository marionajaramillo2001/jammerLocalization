Monte Carlo Run 7/10 with Seed: 48
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [478. 512.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 18.68308502480813)
Round 1: test_loss = 0.000000
Round %d: (1, 20.111865204655683)
Round 2: test_loss = 0.000000
Round %d: (2, 20.448878027036702)
Round 3: test_loss = 0.000000
Round %d: (3, 17.920465719375333)
Round 4: test_loss = 0.000000
Round %d: (4, 17.708616732867466)
Round 5: test_loss = 0.000000
Round %d: (5, 19.169147002514464)
Round 6: test_loss = 0.000000
Round %d: (6, 19.423284491936627)
Round 7: test_loss = 0.000000
Round %d: (7, 19.237445851999464)
Round 8: test_loss = 0.000000
Round %d: (8, 19.32664788114073)
Round 9: test_loss = 0.000000
Round %d: (9, 18.496734499540388)
Round 10: test_loss = 0.000000
Round %d: (10, 17.88830249021555)
Round 11: test_loss = 0.000000
Round %d: (11, 17.69131368176472)
Round 12: test_loss = 0.000000
Round %d: (12, 17.501176450899635)
Round 13: test_loss = 0.000000
Round %d: (13, 16.723743306581888)
Round 14: test_loss = 0.000000
Round %d: (14, 15.149860320220421)
Round 15: test_loss = 0.000000
Round %d: (15, 14.802710935172058)
Round 16: test_loss = 0.000000
Round %d: (16, 13.542035722396815)
Round 17: test_loss = 0.000000
Round %d: (17, 10.362245110688171)
Round 18: test_loss = 0.000000
Round %d: (18, 9.511781085626954)
Round 19: test_loss = 0.000000
Round %d: (19, 7.838394711561266)
Round 20: test_loss = 0.000000
Round %d: (20, 6.735701826420541)
Round 21: test_loss = 0.000000
Round %d: (21, 5.079092528910399)
Round 22: test_loss = 0.000000
Round %d: (22, 4.202410823275545)
Round 23: test_loss = 0.000000
Round %d: (23, 4.336533372505848)
Round 24: test_loss = 0.000000
Round %d: (24, 3.923872274587421)
Round 25: test_loss = 0.000000
Round %d: (25, 3.618410837957533)
Round 26: test_loss = 0.000000
Round %d: (26, 3.974766823493343)
Round 27: test_loss = 0.000000
Round %d: (27, 4.230652533900958)
Round 28: test_loss = 0.000000
Round %d: (28, 4.372515789331972)
Round 29: test_loss = 0.000000
Round %d: (29, 4.034367996704013)
Round 30: test_loss = 0.000000
Round %d: (30, 3.028224046683188)
Round 31: test_loss = 0.000000
Round %d: (31, 3.069020555069505)
Round 32: test_loss = 0.000000
Round %d: (32, 3.108556413892438)
Round 33: test_loss = 0.000000
Round %d: (33, 2.8669081427079326)
Round 34: test_loss = 0.000000
Round %d: (34, 2.4656187495354414)
Round 35: test_loss = 0.000000
Round %d: (35, 2.620552732065594)
Round 36: test_loss = 0.000000
Round %d: (36, 2.2938466183584425)
Round 37: test_loss = 0.000000
Round %d: (37, 3.0526184335288673)
Round 38: test_loss = 0.000000
Round %d: (38, 2.254225585953673)
Round 39: test_loss = 0.000000
Round %d: (39, 2.9832878573574284)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 18.9164144397099)
Round 1: test_loss = 0.000000
Round %d: (1, 18.943358975242255)
Round 2: test_loss = 0.000000
Round %d: (2, 13.636763318264366)
Round 3: test_loss = 0.000000
Round %d: (3, 11.57264402441136)
Round 4: test_loss = 0.000000
Round %d: (4, 12.793876714702877)
Round 5: test_loss = 0.000000
Round %d: (5, 11.795896801117989)
Round 6: test_loss = 0.000000
Round %d: (6, 10.357811352291622)
Round 7: test_loss = 0.000000
Round %d: (7, 9.564014287500578)
Round 8: test_loss = 0.000000
Round %d: (8, 11.848149748632181)
Round 9: test_loss = 0.000000
Round %d: (9, 11.723542057045163)
Round 10: test_loss = 0.000000
Round %d: (10, 11.163311815812055)
Round 11: test_loss = 0.000000
Round %d: (11, 11.304205016364959)
Round 12: test_loss = 0.000000
Round %d: (12, 11.289687660615852)
Round 13: test_loss = 0.000000
Round %d: (13, 11.465060370586272)
Round 14: test_loss = 0.000000
Round %d: (14, 11.405390336647045)
Round 15: test_loss = 0.000000
Round %d: (15, 10.608101705770343)
Round 16: test_loss = 0.000000
Round %d: (16, 11.53829918860297)
Round 17: test_loss = 0.000000
Round %d: (17, 9.97813625089688)
Round 18: test_loss = 0.000000
Round %d: (18, 10.642187064992893)
Round 19: test_loss = 0.000000
Round %d: (19, 10.410077184274959)
Round 20: test_loss = 0.000000
Round %d: (20, 10.161110710059113)
Round 21: test_loss = 0.000000
Round %d: (21, 11.036165498280933)
Round 22: test_loss = 0.000000
Round %d: (22, 9.754249021802904)
Round 23: test_loss = 0.000000
Round %d: (23, 10.132895116262)
Round 24: test_loss = 0.000000
Round %d: (24, 10.993384373345174)
Round 25: test_loss = 0.000000
Round %d: (25, 9.779433890842393)
Round 26: test_loss = 0.000000
Round %d: (26, 10.883843232431593)
Round 27: test_loss = 0.000000
Round %d: (27, 9.3570170170279)
Round 28: test_loss = 0.000000
Round %d: (28, 9.459989857152104)
Round 29: test_loss = 0.000000
Round %d: (29, 9.699109405786396)
Round 30: test_loss = 0.000000
Round %d: (30, 7.391750365303169)
Round 31: test_loss = 0.000000
Round %d: (31, 6.920041421097393)
Round 32: test_loss = 0.000000
Round %d: (32, 7.205448748848607)
Round 33: test_loss = 0.000000
Round %d: (33, 5.599017440140484)
Round 34: test_loss = 0.000000
Round %d: (34, 5.429402658833094)
Round 35: test_loss = 0.000000
Round %d: (35, 5.288152087690899)
Round 36: test_loss = 0.000000
Round %d: (36, 5.74137834111757)
Round 37: test_loss = 0.000000
Round %d: (37, 4.3408917916285015)
Round 38: test_loss = 0.000000
Round %d: (38, 3.7384929035741865)
Round 39: test_loss = 0.000000
Round %d: (39, 3.2320049168908436)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 17.6718
  Jammer Localization Error (PL): 2.9833
  Jammer Localization Error (APBM): 3.2320
