Monte Carlo Run 8/10 with Seed: 49
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 0.1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [419. 570.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 83.26960003154348)
Round 1: test_loss = 0.000000
Round %d: (1, 93.2408625087865)
Round 2: test_loss = 0.000000
Round %d: (2, 99.62818198724405)
Round 3: test_loss = 0.000000
Round %d: (3, 98.10171350239266)
Round 4: test_loss = 0.000000
Round %d: (4, 93.08792896240315)
Round 5: test_loss = 0.000000
Round %d: (5, 84.01593511226137)
Round 6: test_loss = 0.000000
Round %d: (6, 71.38232175864896)
Round 7: test_loss = 0.000000
Round %d: (7, 55.84091313342057)
Round 8: test_loss = 0.000000
Round %d: (8, 39.9320377749109)
Round 9: test_loss = 0.000000
Round %d: (9, 25.492598846862982)
Round 10: test_loss = 0.000000
Round %d: (10, 14.491993752554308)
Round 11: test_loss = 0.000000
Round %d: (11, 8.688362410147963)
Round 12: test_loss = 0.000000
Round %d: (12, 5.95068450357058)
Round 13: test_loss = 0.000000
Round %d: (13, 6.245149785795183)
Round 14: test_loss = 0.000000
Round %d: (14, 6.714713906117294)
Round 15: test_loss = 0.000000
Round %d: (15, 7.709397112675459)
Round 16: test_loss = 0.000000
Round %d: (16, 8.53808812799748)
Round 17: test_loss = 0.000000
Round %d: (17, 9.346406446634678)
Round 18: test_loss = 0.000000
Round %d: (18, 10.375958264228723)
Round 19: test_loss = 0.000000
Round %d: (19, 12.125965418062663)
Round 20: test_loss = 0.000000
Round %d: (20, 12.979122858491447)
Round 21: test_loss = 0.000000
Round %d: (21, 12.778268075771472)
Round 22: test_loss = 0.000000
Round %d: (22, 12.153006994593653)
Round 23: test_loss = 0.000000
Round %d: (23, 11.904434555073683)
Round 24: test_loss = 0.000000
Round %d: (24, 11.896747371264855)
Round 25: test_loss = 0.000000
Round %d: (25, 10.89282545888904)
Round 26: test_loss = 0.000000
Round %d: (26, 11.911152518266826)
Round 27: test_loss = 0.000000
Round %d: (27, 11.412243539938602)
Round 28: test_loss = 0.000000
Round %d: (28, 11.796364028661998)
Round 29: test_loss = 0.000000
Round %d: (29, 12.131229987009387)
Round 30: test_loss = 0.000000
Round %d: (30, 11.611619983552405)
Round 31: test_loss = 0.000000
Round %d: (31, 10.356534171658344)
Round 32: test_loss = 0.000000
Round %d: (32, 8.743704218445757)
Round 33: test_loss = 0.000000
Round %d: (33, 8.331185762866495)
Round 34: test_loss = 0.000000
Round %d: (34, 9.458972800956298)
Round 35: test_loss = 0.000000
Round %d: (35, 9.118111307140179)
Round 36: test_loss = 0.000000
Round %d: (36, 8.952167274747834)
Round 37: test_loss = 0.000000
Round %d: (37, 9.476533528820639)
Round 38: test_loss = 0.000000
Round %d: (38, 9.298596388477382)
Round 39: test_loss = 0.000000
Round %d: (39, 10.28934492786789)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 83.53084440273705)
Round 1: test_loss = 0.000000
Round %d: (1, 93.25233154409854)
Round 2: test_loss = 0.000000
Round %d: (2, 94.31852690250793)
Round 3: test_loss = 0.000000
Round %d: (3, 87.39422045678252)
Round 4: test_loss = 0.000000
Round %d: (4, 79.69215041362186)
Round 5: test_loss = 0.000000
Round %d: (5, 73.9089970129282)
Round 6: test_loss = 0.000000
Round %d: (6, 65.73433358899082)
Round 7: test_loss = 0.000000
Round %d: (7, 57.70108929017281)
Round 8: test_loss = 0.000000
Round %d: (8, 49.557531625268915)
Round 9: test_loss = 0.000000
Round %d: (9, 42.6305952143155)
Round 10: test_loss = 0.000000
Round %d: (10, 36.735679429320676)
Round 11: test_loss = 0.000000
Round %d: (11, 33.82899838280225)
Round 12: test_loss = 0.000000
Round %d: (12, 29.444227463784884)
Round 13: test_loss = 0.000000
Round %d: (13, 24.997940019670917)
Round 14: test_loss = 0.000000
Round %d: (14, 21.171563733426982)
Round 15: test_loss = 0.000000
Round %d: (15, 18.621199350006773)
Round 16: test_loss = 0.000000
Round %d: (16, 18.424891730216366)
Round 17: test_loss = 0.000000
Round %d: (17, 16.985132883233312)
Round 18: test_loss = 0.000000
Round %d: (18, 15.765745765403643)
Round 19: test_loss = 0.000000
Round %d: (19, 14.329058000088438)
Round 20: test_loss = 0.000000
Round %d: (20, 13.388567165039055)
Round 21: test_loss = 0.000000
Round %d: (21, 12.177840760725122)
Round 22: test_loss = 0.000000
Round %d: (22, 12.288347294892704)
Round 23: test_loss = 0.000000
Round %d: (23, 11.836139401558919)
Round 24: test_loss = 0.000000
Round %d: (24, 13.162396372140837)
Round 25: test_loss = 0.000000
Round %d: (25, 11.681186899089273)
Round 26: test_loss = 0.000000
Round %d: (26, 11.637826104645333)
Round 27: test_loss = 0.000000
Round %d: (27, 11.463631572675833)
Round 28: test_loss = 0.000000
Round %d: (28, 10.37187759273993)
Round 29: test_loss = 0.000000
Round %d: (29, 10.054207459381011)
Round 30: test_loss = 0.000000
Round %d: (30, 9.090616599341232)
Round 31: test_loss = 0.000000
Round %d: (31, 9.398202856489643)
Round 32: test_loss = 0.000000
Round %d: (32, 7.9767932120960605)
Round 33: test_loss = 0.000000
Round %d: (33, 6.606288085606281)
Round 34: test_loss = 0.000000
Round %d: (34, 5.776573503506352)
Round 35: test_loss = 0.000000
Round %d: (35, 5.6841712307793895)
Round 36: test_loss = 0.000000
Round %d: (36, 6.230306343751194)
Round 37: test_loss = 0.000000
Round %d: (37, 5.962500988548064)
Round 38: test_loss = 0.000000
Round %d: (38, 5.549189405203694)
Round 39: test_loss = 0.000000
Round %d: (39, 5.611577343986073)
Closest point in the train dataset to the real location: [496.2104  515.16895]
Minimum distance to the real location: 16.21292167288767
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 75.7718
  Jammer Localization Error (PL): 10.2893
  Jammer Localization Error (APBM): 5.6116
