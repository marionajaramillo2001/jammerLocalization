Monte Carlo Run 2/10 with Seed: 43
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 0.1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [553. 477.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 54.941794869771435)
Round 1: test_loss = 0.000000
Round %d: (1, 70.97070117686685)
Round 2: test_loss = 0.000000
Round %d: (2, 85.5681550033637)
Round 3: test_loss = 0.000000
Round %d: (3, 97.68523481515876)
Round 4: test_loss = 0.000000
Round %d: (4, 107.19676452236736)
Round 5: test_loss = 0.000000
Round %d: (5, 111.11927525911969)
Round 6: test_loss = 0.000000
Round %d: (6, 112.41199944961664)
Round 7: test_loss = 0.000000
Round %d: (7, 113.8502323294571)
Round 8: test_loss = 0.000000
Round %d: (8, 115.57300979334707)
Round 9: test_loss = 0.000000
Round %d: (9, 116.43622890162472)
Round 10: test_loss = 0.000000
Round %d: (10, 118.60389853061255)
Round 11: test_loss = 0.000000
Round %d: (11, 119.75634715808427)
Round 12: test_loss = 0.000000
Round %d: (12, 121.80433128316257)
Round 13: test_loss = 0.000000
Round %d: (13, 125.02228487557967)
Round 14: test_loss = 0.000000
Round %d: (14, 127.83719640135175)
Round 15: test_loss = 0.000000
Round %d: (15, 129.6615000015264)
Round 16: test_loss = 0.000000
Round %d: (16, 132.95146613801091)
Round 17: test_loss = 0.000000
Round %d: (17, 135.78496984694374)
Round 18: test_loss = 0.000000
Round %d: (18, 138.58083384647162)
Round 19: test_loss = 0.000000
Round %d: (19, 141.09400332176838)
Round 20: test_loss = 0.000000
Round %d: (20, 145.18782101840952)
Round 21: test_loss = 0.000000
Round %d: (21, 147.87072835247136)
Round 22: test_loss = 0.000000
Round %d: (22, 152.37181193292122)
Round 23: test_loss = 0.000000
Round %d: (23, 155.88190555800267)
Round 24: test_loss = 0.000000
Round %d: (24, 158.98722231941824)
Round 25: test_loss = 0.000000
Round %d: (25, 162.6595248695277)
Round 26: test_loss = 0.000000
Round %d: (26, 165.50869422898825)
Round 27: test_loss = 0.000000
Round %d: (27, 168.63336375757117)
Round 28: test_loss = 0.000000
Round %d: (28, 173.01827874418123)
Round 29: test_loss = 0.000000
Round %d: (29, 177.21495361916053)
Round 30: test_loss = 0.000000
Round %d: (30, 181.302634776848)
Round 31: test_loss = 0.000000
Round %d: (31, 186.45677675858758)
Round 32: test_loss = 0.000000
Round %d: (32, 189.9943300197132)
Round 33: test_loss = 0.000000
Round %d: (33, 193.39048546836588)
Round 34: test_loss = 0.000000
Round %d: (34, 197.49006769497566)
Round 35: test_loss = 0.000000
Round %d: (35, 201.5806923519524)
Round 36: test_loss = 0.000000
Round %d: (36, 205.39661409380915)
Round 37: test_loss = 0.000000
Round %d: (37, 208.80182891691075)
Round 38: test_loss = 0.000000
Round %d: (38, 213.4719057427183)
Round 39: test_loss = 0.000000
Round %d: (39, 217.95639932482487)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 55.59717112240478)
Round 1: test_loss = 0.000000
Round %d: (1, 70.29852789422021)
Round 2: test_loss = 0.000000
Round %d: (2, 72.08522243868254)
Round 3: test_loss = 0.000000
Round %d: (3, 69.7703019160109)
Round 4: test_loss = 0.000000
Round %d: (4, 66.42124394843702)
Round 5: test_loss = 0.000000
Round %d: (5, 61.634907487153285)
Round 6: test_loss = 0.000000
Round %d: (6, 57.987141012714616)
Round 7: test_loss = 0.000000
Round %d: (7, 52.77905507389302)
Round 8: test_loss = 0.000000
Round %d: (8, 45.95364811398491)
Round 9: test_loss = 0.000000
Round %d: (9, 39.566052917779615)
Round 10: test_loss = 0.000000
Round %d: (10, 32.818524524751155)
Round 11: test_loss = 0.000000
Round %d: (11, 27.965688551353796)
Round 12: test_loss = 0.000000
Round %d: (12, 23.79323517977194)
Round 13: test_loss = 0.000000
Round %d: (13, 18.540139444460383)
Round 14: test_loss = 0.000000
Round %d: (14, 14.972738708908702)
Round 15: test_loss = 0.000000
Round %d: (15, 12.220990562911878)
Round 16: test_loss = 0.000000
Round %d: (16, 10.887705053008009)
Round 17: test_loss = 0.000000
Round %d: (17, 9.053484319364589)
Round 18: test_loss = 0.000000
Round %d: (18, 9.20484483241208)
Round 19: test_loss = 0.000000
Round %d: (19, 9.032250207379215)
Round 20: test_loss = 0.000000
Round %d: (20, 7.725066249110486)
Round 21: test_loss = 0.000000
Round %d: (21, 5.867935071439863)
Round 22: test_loss = 0.000000
Round %d: (22, 5.754845019297619)
Round 23: test_loss = 0.000000
Round %d: (23, 5.874931172269305)
Round 24: test_loss = 0.000000
Round %d: (24, 3.4756305534870084)
Round 25: test_loss = 0.000000
Round %d: (25, 5.019324613476415)
Round 26: test_loss = 0.000000
Round %d: (26, 5.075742763133041)
Round 27: test_loss = 0.000000
Round %d: (27, 5.461280980263406)
Round 28: test_loss = 0.000000
Round %d: (28, 4.509440560049993)
Round 29: test_loss = 0.000000
Round %d: (29, 4.251312984224227)
Round 30: test_loss = 0.000000
Round %d: (30, 4.995373117688724)
Round 31: test_loss = 0.000000
Round %d: (31, 4.765916804503785)
Round 32: test_loss = 0.000000
Round %d: (32, 4.315498248490095)
Round 33: test_loss = 0.000000
Round %d: (33, 4.394925302238764)
Round 34: test_loss = 0.000000
Round %d: (34, 5.137981320272993)
Round 35: test_loss = 0.000000
Round %d: (35, 4.481551510136834)
Round 36: test_loss = 0.000000
Round %d: (36, 3.0886085663110823)
Round 37: test_loss = 0.000000
Round %d: (37, 4.764794335520185)
Round 38: test_loss = 0.000000
Round %d: (38, 6.102278700167663)
Round 39: test_loss = 0.000000
Round %d: (39, 5.306104180976523)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 40.9694
  Jammer Localization Error (PL): 217.9564
  Jammer Localization Error (APBM): 5.3061
