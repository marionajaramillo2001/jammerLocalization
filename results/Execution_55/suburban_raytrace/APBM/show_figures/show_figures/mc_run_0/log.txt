Monte Carlo Run 1/1 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT33/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 1
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 10
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
model_type: APBM
num_obs: 1000
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [498. 499.]
Training the APBM model...
Round 0: test_loss = 0.471966
Round %d: (0, (4.4525880514242635, array([496.74931891, 493.06535426])))
Round 1: test_loss = 0.772595
Round %d: (1, (5.810700788285947, array([494.05779311, 491.99545065])))
Round 2: test_loss = 0.619397
Round %d: (2, (6.569510974116872, array([492.02046056, 492.06857955])))
Round 3: test_loss = 0.551222
Round %d: (3, (6.487630536037478, array([490.95176646, 493.27369265])))
Round 4: test_loss = 0.475259
Round %d: (4, (6.584443230987517, array([490.95280008, 493.06454578])))
Round 5: test_loss = 0.447922
Round %d: (5, (4.978207684448578, array([492.32519799, 494.96710152])))
Round 6: test_loss = 0.446695
Round %d: (6, (6.2311280547264305, array([490.73649014, 494.13558864])))
Round 7: test_loss = 0.429450
Round %d: (7, (6.75439862952918, array([489.95136163, 493.9711883 ])))
Round 8: test_loss = 0.409906
Round %d: (8, (6.925687963200444, array([488.95742372, 495.28054838])))
Round 9: test_loss = 0.425068
Round %d: (9, (6.85789346381482, array([490.04442952, 493.57967657])))
Round 10: test_loss = 0.422492
Round %d: (10, (6.528298341140652, array([490.57510149, 493.64687881])))
Round 11: test_loss = 0.445315
Round %d: (11, (5.784989313758779, array([491.30611951, 494.42450287])))
Round 12: test_loss = 0.439128
Round %d: (12, (7.17096183060276, array([489.65854384, 493.35799831])))
Round 13: test_loss = 0.422722
Round %d: (13, (6.856988307961967, array([489.72934786, 494.04649954])))
Round 14: test_loss = 0.442281
Round %d: (14, (7.681094957738197, array([488.85957176, 493.24625585])))
Round 15: test_loss = 0.401635
Round %d: (15, (7.123229093169905, array([489.05933506, 494.44232381])))
Round 16: test_loss = 0.431150
Round %d: (16, (7.116985146377837, array([489.39638119, 493.88501158])))
Round 17: test_loss = 0.404408
Round %d: (17, (6.904668309456548, array([490.10056319, 493.3918263 ])))
Round 18: test_loss = 0.421132
Round %d: (18, (7.508317394508089, array([489.4917725 , 492.78200439])))
Round 19: test_loss = 0.411060
Round %d: (19, (8.12565518896843, array([487.86119803, 493.67901103])))
Round 20: test_loss = 0.460333
Round %d: (20, (7.733905365685389, array([488.04191146, 494.53654299])))
Round 21: test_loss = 0.414215
Round %d: (21, (7.614331022996919, array([488.40857771, 494.1859359 ])))
Round 22: test_loss = 0.418039
Round %d: (22, (6.506277196450652, array([490.94767158, 493.23805205])))
Round 23: test_loss = 0.423671
Round %d: (23, (6.811681188237035, array([490.33263547, 493.30549683])))
Round 24: test_loss = 0.396778
Round %d: (24, (7.5599768273410675, array([489.78704286, 492.30224589])))
Round 25: test_loss = 0.411415
Round %d: (25, (7.116396815334163, array([490.10579961, 492.89918439])))
Round 26: test_loss = 0.396358
Round %d: (26, (7.579147225653808, array([488.90563612, 493.43907879])))
Round 27: test_loss = 0.443404
Round %d: (27, (6.482809274719175, array([490.1302877 , 494.40280064])))
Round 28: test_loss = 0.411433
Round %d: (28, (6.7964600900368115, array([489.31452495, 494.95197138])))
Round 29: test_loss = 0.426040
Round %d: (29, (7.77877325983228, array([488.38819755, 493.74403342])))
Round 30: test_loss = 0.429757
Round %d: (30, (7.805413759912632, array([489.22390899, 492.44192256])))
Round 31: test_loss = 0.415388
Round %d: (31, (7.0404751561533025, array([490.73999319, 492.34535811])))
Round 32: test_loss = 0.410763
Round %d: (32, (7.321300162699359, array([490.41359354, 492.11196465])))
Round 33: test_loss = 0.410834
Round %d: (33, (6.751068646496048, array([489.8259672, 494.1739575])))
Round 34: test_loss = 0.414748
Round %d: (34, (8.018126227930514, array([488.99376532, 492.24792075])))
Round 35: test_loss = 0.419562
Round %d: (35, (7.98768356537387, array([488.7408659 , 492.65570228])))
Round 36: test_loss = 0.412683
Round %d: (36, (8.079173906150658, array([489.51582303, 491.50246692])))
Round 37: test_loss = 0.442791
Round %d: (37, (7.809355257141976, array([489.90703122, 491.64304747])))
Round 38: test_loss = 0.404962
Round %d: (38, (7.673661444622253, array([489.03733211, 493.00497701])))
Round 39: test_loss = 0.412102
Round %d: (39, (6.746247008627966, array([489.85462733, 494.14135231])))
Closest point in the train dataset to the real location: [500.892  512.6189]
Minimum distance to the real location: 13.69319068600445
  Global Test Loss: 0.4121
  Jammer Initial Localization Error: 0.1910
  Jammer Localization Error: 6.7462
