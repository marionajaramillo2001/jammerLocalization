Monte Carlo Run 3/10 with Seed: 44
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT33/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  998
Train X shape:  torch.Size([798, 2])
Test X shape:  torch.Size([200, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [497. 472.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 6.989760339400106)
Round 1: test_loss = 0.000000
Round %d: (1, 3.639682843153328)
Round 2: test_loss = 0.000000
Round %d: (2, 3.198309350063065)
Round 3: test_loss = 0.000000
Round %d: (3, 3.573844450943508)
Round 4: test_loss = 0.000000
Round %d: (4, 3.3852961322439628)
Round 5: test_loss = 0.000000
Round %d: (5, 3.401017001343316)
Round 6: test_loss = 0.000000
Round %d: (6, 2.8755870827607506)
Round 7: test_loss = 0.000000
Round %d: (7, 3.6867994244970133)
Round 8: test_loss = 0.000000
Round %d: (8, 3.5109397096865993)
Round 9: test_loss = 0.000000
Round %d: (9, 3.130247867846246)
Round 10: test_loss = 0.000000
Round %d: (10, 4.09660177469839)
Round 11: test_loss = 0.000000
Round %d: (11, 2.5945843290352424)
Round 12: test_loss = 0.000000
Round %d: (12, 2.507070886764341)
Round 13: test_loss = 0.000000
Round %d: (13, 2.4531160284904816)
Round 14: test_loss = 0.000000
Round %d: (14, 3.7968865082393792)
Round 15: test_loss = 0.000000
Round %d: (15, 3.48931783470456)
Round 16: test_loss = 0.000000
Round %d: (16, 2.6952996860687444)
Round 17: test_loss = 0.000000
Round %d: (17, 2.872449258557623)
Round 18: test_loss = 0.000000
Round %d: (18, 2.684114677514943)
Round 19: test_loss = 0.000000
Round %d: (19, 2.003031457394258)
Round 20: test_loss = 0.000000
Round %d: (20, 2.9246250643274463)
Round 21: test_loss = 0.000000
Round %d: (21, 1.3659981349119772)
Round 22: test_loss = 0.000000
Round %d: (22, 2.3292974626111334)
Round 23: test_loss = 0.000000
Round %d: (23, 1.9665097415609332)
Round 24: test_loss = 0.000000
Round %d: (24, 1.7551987234532878)
Round 25: test_loss = 0.000000
Round %d: (25, 0.9253574815168264)
Round 26: test_loss = 0.000000
Round %d: (26, 0.9773054198019026)
Round 27: test_loss = 0.000000
Round %d: (27, 1.2916290103729837)
Round 28: test_loss = 0.000000
Round %d: (28, 0.4629153148205982)
Round 29: test_loss = 0.000000
Round %d: (29, 0.37973494996699125)
Round 30: test_loss = 0.000000
Round %d: (30, 0.6660137511852168)
Round 31: test_loss = 0.000000
Round %d: (31, 1.388039624020224)
Round 32: test_loss = 0.000000
Round %d: (32, 1.0188602328597758)
Round 33: test_loss = 0.000000
Round %d: (33, 1.510416405114731)
Round 34: test_loss = 0.000000
Round %d: (34, 1.8710650848574664)
Round 35: test_loss = 0.000000
Round %d: (35, 1.7561188825921956)
Round 36: test_loss = 0.000000
Round %d: (36, 2.5042200132780463)
Round 37: test_loss = 0.000000
Round %d: (37, 2.4615960611254932)
Round 38: test_loss = 0.000000
Round %d: (38, 2.1800216026919093)
Round 39: test_loss = 0.000000
Round %d: (39, 2.3202834683073257)
Closest point in the train dataset to the real location: [500.892  512.6189]
Minimum distance to the real location: 13.69319068600445
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 11.90354124962867)
Round 1: test_loss = 0.000000
Round %d: (1, 6.730414750703721)
Round 2: test_loss = 0.000000
Round %d: (2, 5.307833388373858)
Round 3: test_loss = 0.000000
Round %d: (3, 5.2481380618382385)
Round 4: test_loss = 0.000000
Round %d: (4, 7.654298819992597)
Round 5: test_loss = 0.000000
Round %d: (5, 6.976316858120591)
Round 6: test_loss = 0.000000
Round %d: (6, 5.685927917006942)
Round 7: test_loss = 0.000000
Round %d: (7, 7.243337413468541)
Round 8: test_loss = 0.000000
Round %d: (8, 8.333862252097356)
Round 9: test_loss = 0.000000
Round %d: (9, 6.182064284931399)
Round 10: test_loss = 0.000000
Round %d: (10, 7.458765387907174)
Round 11: test_loss = 0.000000
Round %d: (11, 6.484048721475705)
Round 12: test_loss = 0.000000
Round %d: (12, 6.551773833514939)
Round 13: test_loss = 0.000000
Round %d: (13, 6.580125452466708)
Round 14: test_loss = 0.000000
Round %d: (14, 6.769141402504167)
Round 15: test_loss = 0.000000
Round %d: (15, 6.161710162464618)
Round 16: test_loss = 0.000000
Round %d: (16, 6.17710907020442)
Round 17: test_loss = 0.000000
Round %d: (17, 4.678912233514428)
Round 18: test_loss = 0.000000
Round %d: (18, 4.5170456848036)
Round 19: test_loss = 0.000000
Round %d: (19, 5.37274517648974)
Round 20: test_loss = 0.000000
Round %d: (20, 6.00880364994725)
Round 21: test_loss = 0.000000
Round %d: (21, 6.065096893256498)
Round 22: test_loss = 0.000000
Round %d: (22, 7.14621015254972)
Round 23: test_loss = 0.000000
Round %d: (23, 7.106183542224756)
Round 24: test_loss = 0.000000
Round %d: (24, 5.376778955427816)
Round 25: test_loss = 0.000000
Round %d: (25, 6.458781272752413)
Round 26: test_loss = 0.000000
Round %d: (26, 6.313024864800048)
Round 27: test_loss = 0.000000
Round %d: (27, 6.038319266696126)
Round 28: test_loss = 0.000000
Round %d: (28, 5.3264142168739355)
Round 29: test_loss = 0.000000
Round %d: (29, 6.038557961081548)
Round 30: test_loss = 0.000000
Round %d: (30, 5.454838331252187)
Round 31: test_loss = 0.000000
Round %d: (31, 5.461749420655011)
Round 32: test_loss = 0.000000
Round %d: (32, 8.037044968347807)
Round 33: test_loss = 0.000000
Round %d: (33, 7.571979197344942)
Round 34: test_loss = 0.000000
Round %d: (34, 7.076011319440606)
Round 35: test_loss = 0.000000
Round %d: (35, 6.359907007578422)
Round 36: test_loss = 0.000000
Round %d: (36, 6.48421167177088)
Round 37: test_loss = 0.000000
Round %d: (37, 6.870131849650482)
Round 38: test_loss = 0.000000
Round %d: (38, 6.5788172077511895)
Round 39: test_loss = 0.000000
Round %d: (39, 6.5085461603874215)
Closest point in the train dataset to the real location: [500.892  512.6189]
Minimum distance to the real location: 13.69319068600445
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 19.2826
  Jammer Localization Error (PL): 2.3203
  Jammer Localization Error (APBM): 6.5085
