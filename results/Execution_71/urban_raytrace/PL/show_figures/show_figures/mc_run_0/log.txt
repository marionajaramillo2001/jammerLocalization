Monte Carlo Run 1/1 with Seed: 42
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 1
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
model_type: PL
num_obs: 1000
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [442. 510.]
Training the PL model...
Round 0: test_loss = 0.808771
Round %d: (0, (85.1490881717368, array([388.0026101 , 544.72847252])))
Round 1: test_loss = 0.665176
Round %d: (1, (43.69759845785776, array([440.54754246, 517.76012547])))
Round 2: test_loss = 0.638035
Round %d: (2, (14.396946271967058, array([486.4237689 , 514.88499513])))
Round 3: test_loss = 0.636963
Round %d: (3, (14.152473876498018, array([485.48302806, 513.56208382])))
Round 4: test_loss = 0.637044
Round %d: (4, (13.777814961085818, array([486.5684019 , 513.85254574])))
Round 5: test_loss = 0.635994
Round %d: (5, (13.914711331901387, array([487.02479846, 514.49778692])))
Round 6: test_loss = 0.636220
Round %d: (6, (13.949881766529398, array([486.38001522, 514.01059295])))
Round 7: test_loss = 0.637352
Round %d: (7, (14.700008474179501, array([485.25970873, 514.42211848])))
Round 8: test_loss = 0.634353
Round %d: (8, (12.664619008962076, array([486.64660136, 511.7472292 ])))
Round 9: test_loss = 0.636903
Round %d: (9, (14.056778371866976, array([486.43263085, 514.2588939 ])))
Round 10: test_loss = 0.636666
Round %d: (10, (14.156516573780536, array([486.67823488, 514.65463005])))
Round 11: test_loss = 0.634438
Round %d: (11, (13.306851058071501, array([487.03978507, 513.38039908])))
Round 12: test_loss = 0.639422
Round %d: (12, (14.429552199885764, array([486.31783754, 514.85588447])))
Round 13: test_loss = 0.635770
Round %d: (13, (13.88788442669987, array([486.31193512, 513.83121848])))
Round 14: test_loss = 0.635079
Round %d: (14, (13.2938712830476, array([487.88815053, 514.06568595])))
Round 15: test_loss = 0.634942
Round %d: (15, (13.659388645568287, array([487.32861502, 514.27982119])))
Round 16: test_loss = 0.638135
Round %d: (16, (16.172451675639525, array([483.24937948, 515.36863937])))
Round 17: test_loss = 0.636399
Round %d: (17, (13.83483363623212, array([487.39171968, 514.64848953])))
Round 18: test_loss = 0.627578
Round %d: (18, (10.13127714425323, array([487.43198796, 506.9851524 ])))
Round 19: test_loss = 0.626095
Round %d: (19, (9.854069886286803, array([487.55140667, 506.43141572])))
Round 20: test_loss = 0.624933
Round %d: (20, (9.65919532174198, array([487.15175352, 505.09036007])))
Round 21: test_loss = 0.620292
Round %d: (21, (4.96543310803354, array([492.66063307, 500.7873779 ])))
Round 22: test_loss = 0.613263
Round %d: (22, (2.149935594933249, array([502.5350523 , 498.88286843])))
Round 23: test_loss = 0.611413
Round %d: (23, (5.135577558872355, array([506.57426562, 497.55768766])))
Round 24: test_loss = 0.613685
Round %d: (24, (7.170524300517981, array([509.18046965, 502.39118006])))
Round 25: test_loss = 0.614075
Round %d: (25, (4.911442170819105, array([506.3979325 , 498.30773804])))
Round 26: test_loss = 0.611722
Round %d: (26, (5.9566731528253465, array([507.80053289, 497.73362714])))
Round 27: test_loss = 0.615211
Round %d: (27, (7.543562561638838, array([510.15867314, 500.13144552])))
Round 28: test_loss = 0.612610
Round %d: (28, (8.520192881594816, array([511.42344743, 501.18705286])))
Round 29: test_loss = 0.612177
Round %d: (29, (7.226949017644558, array([509.69787484, 498.33325569])))
Round 30: test_loss = 0.615611
Round %d: (30, (8.028797332739307, array([510.51508448, 502.14388187])))
Round 31: test_loss = 0.616119
Round %d: (31, (6.496985274905266, array([508.71114178, 499.32801593])))
Round 32: test_loss = 0.617224
Round %d: (32, (6.745622402420001, array([508.90794672, 501.01003434])))
Round 33: test_loss = 0.612846
Round %d: (33, (5.871148195642208, array([507.81908438, 498.95624166])))
Round 34: test_loss = 0.611662
Round %d: (34, (7.504108796373389, array([510.13545155, 499.27420948])))
Round 35: test_loss = 0.611465
Round %d: (35, (10.13302343349769, array([513.85201854, 499.491566  ])))
Round 36: test_loss = 0.612399
Round %d: (36, (8.53978568915739, array([511.04626404, 502.91355241])))
Round 37: test_loss = 0.611838
Round %d: (37, (9.353162812800424, array([512.49368213, 501.89159523])))
Round 38: test_loss = 0.612110
Round %d: (38, (6.093868124613826, array([507.9801861 , 500.95564145])))
Round 39: test_loss = 0.612230
Round %d: (39, (7.185228073801329, array([509.47905322, 501.33111742])))
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss: 0.6122
  Jammer Initial Localization Error: 41.3729
  Jammer Localization Error: 7.1852
