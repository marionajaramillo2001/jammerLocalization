Monte Carlo Run 8/10 with Seed: 49
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT36/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [417. 542.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 74.36778868461546)
Round 1: test_loss = 0.000000
Round %d: (1, 87.63637501043944)
Round 2: test_loss = 0.000000
Round %d: (2, 100.57772784276668)
Round 3: test_loss = 0.000000
Round %d: (3, 111.46292325007832)
Round 4: test_loss = 0.000000
Round %d: (4, 117.04125377551526)
Round 5: test_loss = 0.000000
Round %d: (5, 122.89107611654374)
Round 6: test_loss = 0.000000
Round %d: (6, 128.8714113294908)
Round 7: test_loss = 0.000000
Round %d: (7, 134.47239986046984)
Round 8: test_loss = 0.000000
Round %d: (8, 136.3428577621706)
Round 9: test_loss = 0.000000
Round %d: (9, 137.23903251764594)
Round 10: test_loss = 0.000000
Round %d: (10, 138.57623350942583)
Round 11: test_loss = 0.000000
Round %d: (11, 141.5549019833674)
Round 12: test_loss = 0.000000
Round %d: (12, 142.6396734523911)
Round 13: test_loss = 0.000000
Round %d: (13, 143.57246729823504)
Round 14: test_loss = 0.000000
Round %d: (14, 144.42059017420726)
Round 15: test_loss = 0.000000
Round %d: (15, 145.48238660656872)
Round 16: test_loss = 0.000000
Round %d: (16, 147.43461329933027)
Round 17: test_loss = 0.000000
Round %d: (17, 148.36641935226277)
Round 18: test_loss = 0.000000
Round %d: (18, 148.9936270730096)
Round 19: test_loss = 0.000000
Round %d: (19, 150.28562694887177)
Round 20: test_loss = 0.000000
Round %d: (20, 151.5748131329408)
Round 21: test_loss = 0.000000
Round %d: (21, 153.67445247678833)
Round 22: test_loss = 0.000000
Round %d: (22, 154.831487560187)
Round 23: test_loss = 0.000000
Round %d: (23, 156.21110991077336)
Round 24: test_loss = 0.000000
Round %d: (24, 157.38238926202462)
Round 25: test_loss = 0.000000
Round %d: (25, 159.09551271633407)
Round 26: test_loss = 0.000000
Round %d: (26, 160.21298340967851)
Round 27: test_loss = 0.000000
Round %d: (27, 160.662373978702)
Round 28: test_loss = 0.000000
Round %d: (28, 161.2867385642126)
Round 29: test_loss = 0.000000
Round %d: (29, 161.815869307814)
Round 30: test_loss = 0.000000
Round %d: (30, 163.44805249245897)
Round 31: test_loss = 0.000000
Round %d: (31, 164.16725897983275)
Round 32: test_loss = 0.000000
Round %d: (32, 165.42581244779944)
Round 33: test_loss = 0.000000
Round %d: (33, 166.64749061082068)
Round 34: test_loss = 0.000000
Round %d: (34, 166.12356847164898)
Round 35: test_loss = 0.000000
Round %d: (35, 167.63508800535308)
Round 36: test_loss = 0.000000
Round %d: (36, 167.70464527721495)
Round 37: test_loss = 0.000000
Round %d: (37, 167.2479819120265)
Round 38: test_loss = 0.000000
Round %d: (38, 168.3200874291495)
Round 39: test_loss = 0.000000
Round %d: (39, 168.30492545460592)
Closest point in the train dataset to the real location: [503.93417 514.6261 ]
Minimum distance to the real location: 15.95012959699445
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 74.15884995723025)
Round 1: test_loss = 0.000000
Round %d: (1, 84.3104855466634)
Round 2: test_loss = 0.000000
Round %d: (2, 86.02458161669819)
Round 3: test_loss = 0.000000
Round %d: (3, 81.68681876518201)
Round 4: test_loss = 0.000000
Round %d: (4, 74.27400390347707)
Round 5: test_loss = 0.000000
Round %d: (5, 68.01374873820829)
Round 6: test_loss = 0.000000
Round %d: (6, 59.452717229200545)
Round 7: test_loss = 0.000000
Round %d: (7, 51.95876851290583)
Round 8: test_loss = 0.000000
Round %d: (8, 43.0804637918435)
Round 9: test_loss = 0.000000
Round %d: (9, 35.01366898926748)
Round 10: test_loss = 0.000000
Round %d: (10, 28.128538700831147)
Round 11: test_loss = 0.000000
Round %d: (11, 24.453850215098136)
Round 12: test_loss = 0.000000
Round %d: (12, 20.40543608454218)
Round 13: test_loss = 0.000000
Round %d: (13, 17.367972749192305)
Round 14: test_loss = 0.000000
Round %d: (14, 16.267848635932772)
Round 15: test_loss = 0.000000
Round %d: (15, 15.288015039519685)
Round 16: test_loss = 0.000000
Round %d: (16, 15.21537064264568)
Round 17: test_loss = 0.000000
Round %d: (17, 14.903796549092904)
Round 18: test_loss = 0.000000
Round %d: (18, 14.129660962734574)
Round 19: test_loss = 0.000000
Round %d: (19, 14.775896975042649)
Round 20: test_loss = 0.000000
Round %d: (20, 13.510702644965667)
Round 21: test_loss = 0.000000
Round %d: (21, 12.501906390096261)
Round 22: test_loss = 0.000000
Round %d: (22, 12.351572795096217)
Round 23: test_loss = 0.000000
Round %d: (23, 10.781038094334008)
Round 24: test_loss = 0.000000
Round %d: (24, 10.260198471846678)
Round 25: test_loss = 0.000000
Round %d: (25, 10.346286142742914)
Round 26: test_loss = 0.000000
Round %d: (26, 8.702537817930894)
Round 27: test_loss = 0.000000
Round %d: (27, 7.832963732053347)
Round 28: test_loss = 0.000000
Round %d: (28, 6.799122552318129)
Round 29: test_loss = 0.000000
Round %d: (29, 5.662179077441822)
Round 30: test_loss = 0.000000
Round %d: (30, 3.776682632245907)
Round 31: test_loss = 0.000000
Round %d: (31, 1.5454767594123506)
Round 32: test_loss = 0.000000
Round %d: (32, 1.2749162537151542)
Round 33: test_loss = 0.000000
Round %d: (33, 1.1353797086151718)
Round 34: test_loss = 0.000000
Round %d: (34, 1.2898441698338978)
Round 35: test_loss = 0.000000
Round %d: (35, 1.4499971342299127)
Round 36: test_loss = 0.000000
Round %d: (36, 2.553284374554731)
Round 37: test_loss = 0.000000
Round %d: (37, 1.8093690629657433)
Round 38: test_loss = 0.000000
Round %d: (38, 1.0394358117810176)
Round 39: test_loss = 0.000000
Round %d: (39, 2.618716279706296)
Closest point in the train dataset to the real location: [504.01184 516.21484]
Minimum distance to the real location: 17.502190349751
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 65.7020
  Jammer Localization Error (PL): 168.3049
  Jammer Localization Error (APBM): 2.6187
