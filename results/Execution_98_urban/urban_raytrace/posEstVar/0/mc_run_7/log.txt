Monte Carlo Run 8/10 with Seed: 49
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 5
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [415. 514.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 69.48402907696662)
Round 1: test_loss = 0.000000
Round %d: (1, 81.12237517995874)
Round 2: test_loss = 0.000000
Round %d: (2, 87.39080971170087)
Round 3: test_loss = 0.000000
Round %d: (3, 89.81617692072565)
Round 4: test_loss = 0.000000
Round %d: (4, 85.27506934134713)
Round 5: test_loss = 0.000000
Round %d: (5, 75.70723376051365)
Round 6: test_loss = 0.000000
Round %d: (6, 60.82165809893305)
Round 7: test_loss = 0.000000
Round %d: (7, 45.85277313797629)
Round 8: test_loss = 0.000000
Round %d: (8, 32.25116313494721)
Round 9: test_loss = 0.000000
Round %d: (9, 19.886452881884708)
Round 10: test_loss = 0.000000
Round %d: (10, 11.151274268045333)
Round 11: test_loss = 0.000000
Round %d: (11, 7.29699461028354)
Round 12: test_loss = 0.000000
Round %d: (12, 6.426002725985842)
Round 13: test_loss = 0.000000
Round %d: (13, 6.945979369399307)
Round 14: test_loss = 0.000000
Round %d: (14, 7.373449334967059)
Round 15: test_loss = 0.000000
Round %d: (15, 8.287689660128082)
Round 16: test_loss = 0.000000
Round %d: (16, 8.784994923076926)
Round 17: test_loss = 0.000000
Round %d: (17, 9.591113868697272)
Round 18: test_loss = 0.000000
Round %d: (18, 10.461639968936078)
Round 19: test_loss = 0.000000
Round %d: (19, 12.070386254572526)
Round 20: test_loss = 0.000000
Round %d: (20, 12.78789122400381)
Round 21: test_loss = 0.000000
Round %d: (21, 12.567569134011617)
Round 22: test_loss = 0.000000
Round %d: (22, 11.884746496879556)
Round 23: test_loss = 0.000000
Round %d: (23, 11.496125577376187)
Round 24: test_loss = 0.000000
Round %d: (24, 11.343924466844955)
Round 25: test_loss = 0.000000
Round %d: (25, 10.222454739840718)
Round 26: test_loss = 0.000000
Round %d: (26, 11.332556982305519)
Round 27: test_loss = 0.000000
Round %d: (27, 11.051058460552676)
Round 28: test_loss = 0.000000
Round %d: (28, 11.35204144527111)
Round 29: test_loss = 0.000000
Round %d: (29, 11.603757808504245)
Round 30: test_loss = 0.000000
Round %d: (30, 11.201417973032028)
Round 31: test_loss = 0.000000
Round %d: (31, 9.868857202123015)
Round 32: test_loss = 0.000000
Round %d: (32, 8.503188846640338)
Round 33: test_loss = 0.000000
Round %d: (33, 8.181139761447223)
Round 34: test_loss = 0.000000
Round %d: (34, 9.17436772440564)
Round 35: test_loss = 0.000000
Round %d: (35, 8.847744942123553)
Round 36: test_loss = 0.000000
Round %d: (36, 8.696442719661254)
Round 37: test_loss = 0.000000
Round %d: (37, 9.341938077888257)
Round 38: test_loss = 0.000000
Round %d: (38, 9.171341915704453)
Round 39: test_loss = 0.000000
Round %d: (39, 9.973783319020152)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 68.2515485000789)
Round 1: test_loss = 0.000000
Round %d: (1, 76.87291708961122)
Round 2: test_loss = 0.000000
Round %d: (2, 78.36169303571081)
Round 3: test_loss = 0.000000
Round %d: (3, 73.17110039510803)
Round 4: test_loss = 0.000000
Round %d: (4, 65.74265793631865)
Round 5: test_loss = 0.000000
Round %d: (5, 59.399725627006134)
Round 6: test_loss = 0.000000
Round %d: (6, 50.15932924658968)
Round 7: test_loss = 0.000000
Round %d: (7, 41.81859570260002)
Round 8: test_loss = 0.000000
Round %d: (8, 32.66805336432609)
Round 9: test_loss = 0.000000
Round %d: (9, 24.88507286443681)
Round 10: test_loss = 0.000000
Round %d: (10, 18.0146307016692)
Round 11: test_loss = 0.000000
Round %d: (11, 15.721519524331049)
Round 12: test_loss = 0.000000
Round %d: (12, 14.535467993798987)
Round 13: test_loss = 0.000000
Round %d: (13, 11.75890052769309)
Round 14: test_loss = 0.000000
Round %d: (14, 9.11575656021345)
Round 15: test_loss = 0.000000
Round %d: (15, 7.787745490856731)
Round 16: test_loss = 0.000000
Round %d: (16, 7.0335857199263625)
Round 17: test_loss = 0.000000
Round %d: (17, 6.325539840799691)
Round 18: test_loss = 0.000000
Round %d: (18, 6.444698338720411)
Round 19: test_loss = 0.000000
Round %d: (19, 4.999237940537016)
Round 20: test_loss = 0.000000
Round %d: (20, 3.3037790402928287)
Round 21: test_loss = 0.000000
Round %d: (21, 4.097792638296593)
Round 22: test_loss = 0.000000
Round %d: (22, 4.7574977411096375)
Round 23: test_loss = 0.000000
Round %d: (23, 4.6966087446202485)
Round 24: test_loss = 0.000000
Round %d: (24, 5.949019468816379)
Round 25: test_loss = 0.000000
Round %d: (25, 4.3647416644152175)
Round 26: test_loss = 0.000000
Round %d: (26, 3.9180279678401315)
Round 27: test_loss = 0.000000
Round %d: (27, 5.7150785142267635)
Round 28: test_loss = 0.000000
Round %d: (28, 3.802922790240277)
Round 29: test_loss = 0.000000
Round %d: (29, 4.151306196412536)
Round 30: test_loss = 0.000000
Round %d: (30, 3.9801135277180495)
Round 31: test_loss = 0.000000
Round %d: (31, 4.729380561508387)
Round 32: test_loss = 0.000000
Round %d: (32, 4.750034089604798)
Round 33: test_loss = 0.000000
Round %d: (33, 5.205904539285986)
Round 34: test_loss = 0.000000
Round %d: (34, 3.6530327277891583)
Round 35: test_loss = 0.000000
Round %d: (35, 4.326602707587376)
Round 36: test_loss = 0.000000
Round %d: (36, 5.0702814082571415)
Round 37: test_loss = 0.000000
Round %d: (37, 4.754941718826025)
Round 38: test_loss = 0.000000
Round %d: (38, 4.316605491353747)
Round 39: test_loss = 0.000000
Round %d: (39, 4.14425954905682)
Closest point in the train dataset to the real location: [496.2104  515.16895]
Minimum distance to the real location: 16.21292167288767
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 60.6642
  Jammer Localization Error (PL): 9.9738
  Jammer Localization Error (APBM): 4.1443
