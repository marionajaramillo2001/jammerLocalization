Monte Carlo Run 5/10 with Seed: 46
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 1
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [510. 544.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 80.8727320305607)
Round 1: test_loss = 0.000000
Round %d: (1, 27.911610604899902)
Round 2: test_loss = 0.000000
Round %d: (2, 18.92864274942086)
Round 3: test_loss = 0.000000
Round %d: (3, 19.591403747273596)
Round 4: test_loss = 0.000000
Round %d: (4, 18.717808945549766)
Round 5: test_loss = 0.000000
Round %d: (5, 11.178887712800123)
Round 6: test_loss = 0.000000
Round %d: (6, 0.9119756720143574)
Round 7: test_loss = 0.000000
Round %d: (7, 3.519417933692884)
Round 8: test_loss = 0.000000
Round %d: (8, 3.3810731650930936)
Round 9: test_loss = 0.000000
Round %d: (9, 2.5721420800754866)
Round 10: test_loss = 0.000000
Round %d: (10, 2.2281154337030262)
Round 11: test_loss = 0.000000
Round %d: (11, 2.229677663193373)
Round 12: test_loss = 0.000000
Round %d: (12, 2.711172742045085)
Round 13: test_loss = 0.000000
Round %d: (13, 3.0446714386562306)
Round 14: test_loss = 0.000000
Round %d: (14, 3.064145952408412)
Round 15: test_loss = 0.000000
Round %d: (15, 2.522329768229427)
Round 16: test_loss = 0.000000
Round %d: (16, 3.35277960296187)
Round 17: test_loss = 0.000000
Round %d: (17, 1.1603905532222294)
Round 18: test_loss = 0.000000
Round %d: (18, 2.20318278399396)
Round 19: test_loss = 0.000000
Round %d: (19, 2.0921491712723275)
Round 20: test_loss = 0.000000
Round %d: (20, 1.6778948317661253)
Round 21: test_loss = 0.000000
Round %d: (21, 3.0851192401596435)
Round 22: test_loss = 0.000000
Round %d: (22, 3.064097704476353)
Round 23: test_loss = 0.000000
Round %d: (23, 3.192400664233385)
Round 24: test_loss = 0.000000
Round %d: (24, 2.457310952650994)
Round 25: test_loss = 0.000000
Round %d: (25, 3.8504881890415565)
Round 26: test_loss = 0.000000
Round %d: (26, 2.192024576089296)
Round 27: test_loss = 0.000000
Round %d: (27, 4.7327599356087)
Round 28: test_loss = 0.000000
Round %d: (28, 1.4029971633999903)
Round 29: test_loss = 0.000000
Round %d: (29, 2.8646255012036286)
Round 30: test_loss = 0.000000
Round %d: (30, 0.6041749721826436)
Round 31: test_loss = 0.000000
Round %d: (31, 2.1885416945025846)
Round 32: test_loss = 0.000000
Round %d: (32, 1.8074651499106829)
Round 33: test_loss = 0.000000
Round %d: (33, 2.501217317864639)
Round 34: test_loss = 0.000000
Round %d: (34, 3.428705241159258)
Round 35: test_loss = 0.000000
Round %d: (35, 3.7132654475549227)
Round 36: test_loss = 0.000000
Round %d: (36, 1.9134066175323279)
Round 37: test_loss = 0.000000
Round %d: (37, 1.004158488785977)
Round 38: test_loss = 0.000000
Round %d: (38, 2.119327838251586)
Round 39: test_loss = 0.000000
Round %d: (39, 2.48089689800749)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 54.47651255259155)
Round 1: test_loss = 0.000000
Round %d: (1, 25.96360670366842)
Round 2: test_loss = 0.000000
Round %d: (2, 21.370087484764362)
Round 3: test_loss = 0.000000
Round %d: (3, 17.935799808650316)
Round 4: test_loss = 0.000000
Round %d: (4, 22.358898209970675)
Round 5: test_loss = 0.000000
Round %d: (5, 18.869865213236626)
Round 6: test_loss = 0.000000
Round %d: (6, 22.3363673083411)
Round 7: test_loss = 0.000000
Round %d: (7, 13.400261006877694)
Round 8: test_loss = 0.000000
Round %d: (8, 16.26158095508245)
Round 9: test_loss = 0.000000
Round %d: (9, 19.954953674854753)
Round 10: test_loss = 0.000000
Round %d: (10, 18.701002399236085)
Round 11: test_loss = 0.000000
Round %d: (11, 15.399095108707408)
Round 12: test_loss = 0.000000
Round %d: (12, 15.470302146855204)
Round 13: test_loss = 0.000000
Round %d: (13, 20.55143969175404)
Round 14: test_loss = 0.000000
Round %d: (14, 22.459026726514942)
Round 15: test_loss = 0.000000
Round %d: (15, 21.86590607342354)
Round 16: test_loss = 0.000000
Round %d: (16, 19.66074978374059)
Round 17: test_loss = 0.000000
Round %d: (17, 12.55025974970979)
Round 18: test_loss = 0.000000
Round %d: (18, 10.131897451632122)
Round 19: test_loss = 0.000000
Round %d: (19, 9.422731595703633)
Round 20: test_loss = 0.000000
Round %d: (20, 12.650187325351961)
Round 21: test_loss = 0.000000
Round %d: (21, 11.411745167701236)
Round 22: test_loss = 0.000000
Round %d: (22, 10.048276586965692)
Round 23: test_loss = 0.000000
Round %d: (23, 9.830053232827519)
Round 24: test_loss = 0.000000
Round %d: (24, 14.688590361915972)
Round 25: test_loss = 0.000000
Round %d: (25, 9.208645616096803)
Round 26: test_loss = 0.000000
Round %d: (26, 8.934622429522427)
Round 27: test_loss = 0.000000
Round %d: (27, 9.776698552633878)
Round 28: test_loss = 0.000000
Round %d: (28, 14.165104289045878)
Round 29: test_loss = 0.000000
Round %d: (29, 9.103231497321806)
Round 30: test_loss = 0.000000
Round %d: (30, 6.373402314743956)
Round 31: test_loss = 0.000000
Round %d: (31, 8.808432097418752)
Round 32: test_loss = 0.000000
Round %d: (32, 8.645084578756846)
Round 33: test_loss = 0.000000
Round %d: (33, 9.65892534045642)
Round 34: test_loss = 0.000000
Round %d: (34, 5.673030086346477)
Round 35: test_loss = 0.000000
Round %d: (35, 4.444846076087353)
Round 36: test_loss = 0.000000
Round %d: (36, 9.681572818129231)
Round 37: test_loss = 0.000000
Round %d: (37, 7.950104304642289)
Round 38: test_loss = 0.000000
Round %d: (38, 9.40117500925452)
Round 39: test_loss = 0.000000
Round %d: (39, 10.577537082611833)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 32.4656
  Jammer Localization Error (PL): 2.4809
  Jammer Localization Error (APBM): 10.5775
