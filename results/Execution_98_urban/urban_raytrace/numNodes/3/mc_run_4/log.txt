Monte Carlo Run 5/10 with Seed: 46
Configuration:
path: /Users/marionajaramillocivill/Documents/GitHub/GNSSjamLoc/RT35/obs_time_1/
time_t: 0
test_ratio: 0.2
data_preprocessing: 2
noise: 1
meas_noise_var: 1
betas: True
input_dim: 2
layer_wid: [500, 256, 128, 1]
nonlinearity: leaky_relu
gamma: 2
num_nodes: 3
local_epochs_nn: 20
local_epochs_pl: 20
local_epochs_apbm: 20
num_rounds_nn: 40
num_rounds_pl: 40
num_rounds_apbm: 40
batch_size: 8
lr_optimizer_nn: 0.001
lr_optimizer_theta: 0.5
lr_optimizer_P0: 0.01
lr_optimizer_gamma: 0.01
weight_decay_optimizer_nn: 0
num_obs: 1000
Number of valid samples:  183
Train X shape:  torch.Size([146, 2])
Test X shape:  torch.Size([37, 2])
Training the NN model...
Train losses per round (NN): [array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32), array(0., dtype=float32)]
Initial theta: [483. 538.]
Training the PL model...
Round 0: test_loss = 0.000000
Round %d: (0, 37.312154756542924)
Round 1: test_loss = 0.000000
Round %d: (1, 48.43372513780325)
Round 2: test_loss = 0.000000
Round %d: (2, 39.02009809251026)
Round 3: test_loss = 0.000000
Round %d: (3, 28.700349692952734)
Round 4: test_loss = 0.000000
Round %d: (4, 25.320632459550637)
Round 5: test_loss = 0.000000
Round %d: (5, 23.898809637303717)
Round 6: test_loss = 0.000000
Round %d: (6, 24.807629218357334)
Round 7: test_loss = 0.000000
Round %d: (7, 24.134646964249274)
Round 8: test_loss = 0.000000
Round %d: (8, 24.555532820506418)
Round 9: test_loss = 0.000000
Round %d: (9, 24.969405631516256)
Round 10: test_loss = 0.000000
Round %d: (10, 24.695613628421018)
Round 11: test_loss = 0.000000
Round %d: (11, 25.100747275857312)
Round 12: test_loss = 0.000000
Round %d: (12, 25.02256081522348)
Round 13: test_loss = 0.000000
Round %d: (13, 24.969358453753053)
Round 14: test_loss = 0.000000
Round %d: (14, 24.52543689038134)
Round 15: test_loss = 0.000000
Round %d: (15, 24.919456981773628)
Round 16: test_loss = 0.000000
Round %d: (16, 24.545218752274717)
Round 17: test_loss = 0.000000
Round %d: (17, 25.445016623542838)
Round 18: test_loss = 0.000000
Round %d: (18, 23.86163706394607)
Round 19: test_loss = 0.000000
Round %d: (19, 25.007574802228024)
Round 20: test_loss = 0.000000
Round %d: (20, 24.750548708429836)
Round 21: test_loss = 0.000000
Round %d: (21, 25.152657395843)
Round 22: test_loss = 0.000000
Round %d: (22, 24.319407129741883)
Round 23: test_loss = 0.000000
Round %d: (23, 24.52847959097456)
Round 24: test_loss = 0.000000
Round %d: (24, 25.027711641078376)
Round 25: test_loss = 0.000000
Round %d: (25, 24.646905944920164)
Round 26: test_loss = 0.000000
Round %d: (26, 24.741419688450108)
Round 27: test_loss = 0.000000
Round %d: (27, 25.307608750423487)
Round 28: test_loss = 0.000000
Round %d: (28, 24.50212810929376)
Round 29: test_loss = 0.000000
Round %d: (29, 25.113630641145736)
Round 30: test_loss = 0.000000
Round %d: (30, 25.07305508044945)
Round 31: test_loss = 0.000000
Round %d: (31, 24.30282478933074)
Round 32: test_loss = 0.000000
Round %d: (32, 22.481601473503485)
Round 33: test_loss = 0.000000
Round %d: (33, 18.36580598393787)
Round 34: test_loss = 0.000000
Round %d: (34, 16.024366196964547)
Round 35: test_loss = 0.000000
Round %d: (35, 15.443312005799516)
Round 36: test_loss = 0.000000
Round %d: (36, 14.329955952246118)
Round 37: test_loss = 0.000000
Round %d: (37, 13.950318734898392)
Round 38: test_loss = 0.000000
Round %d: (38, 13.942039503932643)
Round 39: test_loss = 0.000000
Round %d: (39, 13.143495440087388)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
Training the APBM model...
Round 0: test_loss = 0.000000
Round %d: (0, 36.077177617527816)
Round 1: test_loss = 0.000000
Round %d: (1, 39.125500995283915)
Round 2: test_loss = 0.000000
Round %d: (2, 38.802943409897296)
Round 3: test_loss = 0.000000
Round %d: (3, 34.976184741646485)
Round 4: test_loss = 0.000000
Round %d: (4, 33.957251240561796)
Round 5: test_loss = 0.000000
Round %d: (5, 34.22018839245251)
Round 6: test_loss = 0.000000
Round %d: (6, 30.85005649941845)
Round 7: test_loss = 0.000000
Round %d: (7, 27.562420494047636)
Round 8: test_loss = 0.000000
Round %d: (8, 27.090863786394117)
Round 9: test_loss = 0.000000
Round %d: (9, 25.489034692247994)
Round 10: test_loss = 0.000000
Round %d: (10, 23.23663819300619)
Round 11: test_loss = 0.000000
Round %d: (11, 25.114709319451116)
Round 12: test_loss = 0.000000
Round %d: (12, 24.421629369335875)
Round 13: test_loss = 0.000000
Round %d: (13, 24.00874662147881)
Round 14: test_loss = 0.000000
Round %d: (14, 22.465752802701164)
Round 15: test_loss = 0.000000
Round %d: (15, 23.44931617364906)
Round 16: test_loss = 0.000000
Round %d: (16, 23.285442620858475)
Round 17: test_loss = 0.000000
Round %d: (17, 21.9182059006481)
Round 18: test_loss = 0.000000
Round %d: (18, 21.013764160484175)
Round 19: test_loss = 0.000000
Round %d: (19, 18.578925141809822)
Round 20: test_loss = 0.000000
Round %d: (20, 20.07346612955404)
Round 21: test_loss = 0.000000
Round %d: (21, 18.63108985467036)
Round 22: test_loss = 0.000000
Round %d: (22, 17.97660672974999)
Round 23: test_loss = 0.000000
Round %d: (23, 16.750303113399948)
Round 24: test_loss = 0.000000
Round %d: (24, 18.946391250780778)
Round 25: test_loss = 0.000000
Round %d: (25, 20.546804803552025)
Round 26: test_loss = 0.000000
Round %d: (26, 17.9906310242317)
Round 27: test_loss = 0.000000
Round %d: (27, 18.458826943510207)
Round 28: test_loss = 0.000000
Round %d: (28, 17.72119314194576)
Round 29: test_loss = 0.000000
Round %d: (29, 16.839619874105352)
Round 30: test_loss = 0.000000
Round %d: (30, 13.424672191189861)
Round 31: test_loss = 0.000000
Round %d: (31, 13.781157418737518)
Round 32: test_loss = 0.000000
Round %d: (32, 13.259159910445149)
Round 33: test_loss = 0.000000
Round %d: (33, 13.30837836096759)
Round 34: test_loss = 0.000000
Round %d: (34, 12.724791341061636)
Round 35: test_loss = 0.000000
Round %d: (35, 14.833155834858989)
Round 36: test_loss = 0.000000
Round %d: (36, 12.039681030852309)
Round 37: test_loss = 0.000000
Round %d: (37, 9.71904428327017)
Round 38: test_loss = 0.000000
Round %d: (38, 11.515160747278362)
Round 39: test_loss = 0.000000
Round %d: (39, 9.990767645508495)
Closest point in the train dataset to the real location: [502.50565 512.6625 ]
Minimum distance to the real location: 13.693187432091703
  Global Test Loss (NN): 0.0000
  Global Test Loss (PL): 0.0000
  Global Test Loss (APBM): 0.0000
  Jammer Initial Localization Error: 29.7561
  Jammer Localization Error (PL): 13.1435
  Jammer Localization Error (APBM): 9.9908
